// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: orders/device_action.proto

package orders

import (
	proto "github.com/golang/protobuf/proto"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DeviceAction_Kind int32

const (
	DeviceAction_DUMMY DeviceAction_Kind = 0
)

// Enum value maps for DeviceAction_Kind.
var (
	DeviceAction_Kind_name = map[int32]string{
		0: "DUMMY",
	}
	DeviceAction_Kind_value = map[string]int32{
		"DUMMY": 0,
	}
)

func (x DeviceAction_Kind) Enum() *DeviceAction_Kind {
	p := new(DeviceAction_Kind)
	*p = x
	return p
}

func (x DeviceAction_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceAction_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_orders_device_action_proto_enumTypes[0].Descriptor()
}

func (DeviceAction_Kind) Type() protoreflect.EnumType {
	return &file_orders_device_action_proto_enumTypes[0]
}

func (x DeviceAction_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceAction_Kind.Descriptor instead.
func (DeviceAction_Kind) EnumDescriptor() ([]byte, []int) {
	return file_orders_device_action_proto_rawDescGZIP(), []int{0, 0}
}

type DeviceAction_Status int32

const (
	DeviceAction_CREATED     DeviceAction_Status = 0
	DeviceAction_IN_PROGRESS DeviceAction_Status = 1
	DeviceAction_DONE        DeviceAction_Status = 2
	DeviceAction_ERROR       DeviceAction_Status = 3
)

// Enum value maps for DeviceAction_Status.
var (
	DeviceAction_Status_name = map[int32]string{
		0: "CREATED",
		1: "IN_PROGRESS",
		2: "DONE",
		3: "ERROR",
	}
	DeviceAction_Status_value = map[string]int32{
		"CREATED":     0,
		"IN_PROGRESS": 1,
		"DONE":        2,
		"ERROR":       3,
	}
)

func (x DeviceAction_Status) Enum() *DeviceAction_Status {
	p := new(DeviceAction_Status)
	*p = x
	return p
}

func (x DeviceAction_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceAction_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_orders_device_action_proto_enumTypes[1].Descriptor()
}

func (DeviceAction_Status) Type() protoreflect.EnumType {
	return &file_orders_device_action_proto_enumTypes[1]
}

func (x DeviceAction_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceAction_Status.Descriptor instead.
func (DeviceAction_Status) EnumDescriptor() ([]byte, []int) {
	return file_orders_device_action_proto_rawDescGZIP(), []int{0, 1}
}

type DeviceAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Device to which action belongs to.
	DeviceId int64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// The ID of the device action.
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Action kind or type of action
	Kind DeviceAction_Kind `protobuf:"varint,3,opt,name=kind,proto3,enum=DeviceAction_Kind" json:"kind,omitempty"`
	// Parameters
	Parameters map[string]string `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Status of action
	Status DeviceAction_Status `protobuf:"varint,5,opt,name=status,proto3,enum=DeviceAction_Status" json:"status,omitempty"`
	// Details
	Details string `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *DeviceAction) Reset() {
	*x = DeviceAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_device_action_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceAction) ProtoMessage() {}

func (x *DeviceAction) ProtoReflect() protoreflect.Message {
	mi := &file_orders_device_action_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceAction.ProtoReflect.Descriptor instead.
func (*DeviceAction) Descriptor() ([]byte, []int) {
	return file_orders_device_action_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceAction) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *DeviceAction) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceAction) GetKind() DeviceAction_Kind {
	if x != nil {
		return x.Kind
	}
	return DeviceAction_DUMMY
}

func (x *DeviceAction) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *DeviceAction) GetStatus() DeviceAction_Status {
	if x != nil {
		return x.Status
	}
	return DeviceAction_CREATED
}

func (x *DeviceAction) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type ListDeviceActionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The Device ID.
	DeviceId int64 `protobuf:"varint,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *ListDeviceActionsRequest) Reset() {
	*x = ListDeviceActionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_device_action_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceActionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceActionsRequest) ProtoMessage() {}

func (x *ListDeviceActionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orders_device_action_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceActionsRequest.ProtoReflect.Descriptor instead.
func (*ListDeviceActionsRequest) Descriptor() ([]byte, []int) {
	return file_orders_device_action_proto_rawDescGZIP(), []int{1}
}

func (x *ListDeviceActionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDeviceActionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDeviceActionsRequest) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type ListDeviceActionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// There will be a maximum number of items returned based on the page_size field in the request.
	Actions []*DeviceAction `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more results in the list.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListDeviceActionsResponse) Reset() {
	*x = ListDeviceActionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_device_action_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceActionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceActionsResponse) ProtoMessage() {}

func (x *ListDeviceActionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orders_device_action_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceActionsResponse.ProtoReflect.Descriptor instead.
func (*ListDeviceActionsResponse) Descriptor() ([]byte, []int) {
	return file_orders_device_action_proto_rawDescGZIP(), []int{2}
}

func (x *ListDeviceActionsResponse) GetActions() []*DeviceAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *ListDeviceActionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetDeviceActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Device ID.
	DeviceId int64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// The field will contain id of the resource requested.
	ActionId int64 `protobuf:"varint,2,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
}

func (x *GetDeviceActionRequest) Reset() {
	*x = GetDeviceActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_device_action_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceActionRequest) ProtoMessage() {}

func (x *GetDeviceActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orders_device_action_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceActionRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceActionRequest) Descriptor() ([]byte, []int) {
	return file_orders_device_action_proto_rawDescGZIP(), []int{3}
}

func (x *GetDeviceActionRequest) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *GetDeviceActionRequest) GetActionId() int64 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

type CreateDeviceActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Device ID.
	DeviceId int64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// The device_action resource to create.
	Action *DeviceAction `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CreateDeviceActionRequest) Reset() {
	*x = CreateDeviceActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_device_action_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceActionRequest) ProtoMessage() {}

func (x *CreateDeviceActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orders_device_action_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceActionRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceActionRequest) Descriptor() ([]byte, []int) {
	return file_orders_device_action_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDeviceActionRequest) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *CreateDeviceActionRequest) GetAction() *DeviceAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type UpdateDeviceActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The device_action resource which replaces the resource on the server.
	Action *DeviceAction `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	// The update mask applies to the resource. For the `FieldMask` definition,
	// see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
	UpdateMask *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateDeviceActionRequest) Reset() {
	*x = UpdateDeviceActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_device_action_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceActionRequest) ProtoMessage() {}

func (x *UpdateDeviceActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orders_device_action_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceActionRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceActionRequest) Descriptor() ([]byte, []int) {
	return file_orders_device_action_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDeviceActionRequest) GetAction() *DeviceAction {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *UpdateDeviceActionRequest) GetUpdateMask() *field_mask.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type DeleteDeviceActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Device ID.
	DeviceId int64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// The resource id of the line_item to be deleted.
	ActionId int64 `protobuf:"varint,2,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
}

func (x *DeleteDeviceActionRequest) Reset() {
	*x = DeleteDeviceActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_device_action_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceActionRequest) ProtoMessage() {}

func (x *DeleteDeviceActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orders_device_action_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceActionRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceActionRequest) Descriptor() ([]byte, []int) {
	return file_orders_device_action_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteDeviceActionRequest) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *DeleteDeviceActionRequest) GetActionId() int64 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

var File_orders_device_action_proto protoreflect.FileDescriptor

var file_orders_device_action_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9,
	0x02, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x11, 0x0a, 0x04, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x55, 0x4d, 0x4d, 0x59, 0x10, 0x00, 0x22, 0x3b, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x22, 0x73, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x6c, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x52, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x5f, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x7f, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x73, 0x6b, 0x22, 0x55, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x66, 0x79,
	0x69, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orders_device_action_proto_rawDescOnce sync.Once
	file_orders_device_action_proto_rawDescData = file_orders_device_action_proto_rawDesc
)

func file_orders_device_action_proto_rawDescGZIP() []byte {
	file_orders_device_action_proto_rawDescOnce.Do(func() {
		file_orders_device_action_proto_rawDescData = protoimpl.X.CompressGZIP(file_orders_device_action_proto_rawDescData)
	})
	return file_orders_device_action_proto_rawDescData
}

var file_orders_device_action_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_orders_device_action_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_orders_device_action_proto_goTypes = []interface{}{
	(DeviceAction_Kind)(0),            // 0: DeviceAction.Kind
	(DeviceAction_Status)(0),          // 1: DeviceAction.Status
	(*DeviceAction)(nil),              // 2: DeviceAction
	(*ListDeviceActionsRequest)(nil),  // 3: ListDeviceActionsRequest
	(*ListDeviceActionsResponse)(nil), // 4: ListDeviceActionsResponse
	(*GetDeviceActionRequest)(nil),    // 5: GetDeviceActionRequest
	(*CreateDeviceActionRequest)(nil), // 6: CreateDeviceActionRequest
	(*UpdateDeviceActionRequest)(nil), // 7: UpdateDeviceActionRequest
	(*DeleteDeviceActionRequest)(nil), // 8: DeleteDeviceActionRequest
	nil,                               // 9: DeviceAction.ParametersEntry
	(*field_mask.FieldMask)(nil),      // 10: google.protobuf.FieldMask
}
var file_orders_device_action_proto_depIdxs = []int32{
	0,  // 0: DeviceAction.kind:type_name -> DeviceAction.Kind
	9,  // 1: DeviceAction.parameters:type_name -> DeviceAction.ParametersEntry
	1,  // 2: DeviceAction.status:type_name -> DeviceAction.Status
	2,  // 3: ListDeviceActionsResponse.actions:type_name -> DeviceAction
	2,  // 4: CreateDeviceActionRequest.action:type_name -> DeviceAction
	2,  // 5: UpdateDeviceActionRequest.action:type_name -> DeviceAction
	10, // 6: UpdateDeviceActionRequest.update_mask:type_name -> google.protobuf.FieldMask
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_orders_device_action_proto_init() }
func file_orders_device_action_proto_init() {
	if File_orders_device_action_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orders_device_action_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_device_action_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceActionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_device_action_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceActionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_device_action_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_device_action_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_device_action_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orders_device_action_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orders_device_action_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_orders_device_action_proto_goTypes,
		DependencyIndexes: file_orders_device_action_proto_depIdxs,
		EnumInfos:         file_orders_device_action_proto_enumTypes,
		MessageInfos:      file_orders_device_action_proto_msgTypes,
	}.Build()
	File_orders_device_action_proto = out.File
	file_orders_device_action_proto_rawDesc = nil
	file_orders_device_action_proto_goTypes = nil
	file_orders_device_action_proto_depIdxs = nil
}
