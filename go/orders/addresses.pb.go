// Code generated by protoc-gen-go. DO NOT EDIT.
// source: addresses.proto

package orders

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Address struct {
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Company              string   `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	FirstName            string   `protobuf:"bytes,5,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,6,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Address1             string   `protobuf:"bytes,7,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2             string   `protobuf:"bytes,8,opt,name=address2,proto3" json:"address2,omitempty"`
	City                 string   `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`
	ProvinceCode         string   `protobuf:"bytes,10,opt,name=province_code,json=provinceCode,proto3" json:"province_code,omitempty"`
	Province             string   `protobuf:"bytes,11,opt,name=province,proto3" json:"province,omitempty"`
	Zip                  string   `protobuf:"bytes,12,opt,name=zip,proto3" json:"zip,omitempty"`
	CountryCode          string   `protobuf:"bytes,13,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Country              string   `protobuf:"bytes,14,opt,name=country,proto3" json:"country,omitempty"`
	Latitude             float64  `protobuf:"fixed64,15,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,16,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_498a234b157d8ef5, []int{0}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Address) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Address) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *Address) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Address) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Address) GetAddress1() string {
	if m != nil {
		return m.Address1
	}
	return ""
}

func (m *Address) GetAddress2() string {
	if m != nil {
		return m.Address2
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetProvinceCode() string {
	if m != nil {
		return m.ProvinceCode
	}
	return ""
}

func (m *Address) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *Address) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Address) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Address) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Address) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func init() {
	proto.RegisterType((*Address)(nil), "Address")
}

func init() { proto.RegisterFile("addresses.proto", fileDescriptor_498a234b157d8ef5) }

var fileDescriptor_498a234b157d8ef5 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0x86, 0xa9, 0xdb, 0xee, 0xc7, 0x74, 0x6b, 0x4b, 0xf0, 0x30, 0xf8, 0x01, 0x55, 0x2f, 0x3d,
	0x09, 0xd6, 0x5f, 0xa0, 0xde, 0x3d, 0xf4, 0xe8, 0xa5, 0xac, 0x9b, 0xa8, 0x0b, 0xdb, 0x4c, 0x48,
	0x52, 0x61, 0xfd, 0x33, 0xfe, 0x55, 0xc9, 0xa4, 0xf1, 0xe3, 0x36, 0xef, 0xf3, 0xc0, 0x9b, 0x61,
	0x02, 0xf3, 0x46, 0x4a, 0xab, 0x9c, 0x53, 0xee, 0xc6, 0x58, 0xf2, 0x74, 0xf5, 0x95, 0x41, 0x71,
	0x1f, 0x99, 0x10, 0x30, 0xd6, 0xcd, 0x4e, 0xe1, 0xd1, 0x72, 0xb4, 0xaa, 0x36, 0x3c, 0x8b, 0x13,
	0x98, 0x98, 0x77, 0xd2, 0x0a, 0x33, 0x86, 0x31, 0x08, 0x84, 0xa2, 0xa5, 0x9d, 0x69, 0xf4, 0x80,
	0x63, 0xe6, 0x29, 0x8a, 0x0b, 0x80, 0xd7, 0xce, 0x3a, 0xbf, 0xe5, 0xa6, 0x09, 0xcb, 0x8a, 0xc9,
	0x53, 0xa8, 0x3b, 0x83, 0xaa, 0x6f, 0x92, 0xcd, 0xd9, 0x96, 0x01, 0xb0, 0x3c, 0x85, 0xf2, 0xb0,
	0xde, 0x2d, 0x16, 0xd1, 0xa5, 0xfc, 0xc7, 0xad, 0xb1, 0xfc, 0xe7, 0xd6, 0x61, 0xef, 0xb6, 0xf3,
	0x03, 0x56, 0x71, 0xef, 0x30, 0x8b, 0x6b, 0x98, 0x19, 0x4b, 0x1f, 0x9d, 0x6e, 0xd5, 0xb6, 0x25,
	0xa9, 0x10, 0x58, 0xd6, 0x09, 0x3e, 0x92, 0xe4, 0x07, 0x53, 0xc6, 0x69, 0x2c, 0x4d, 0x59, 0x2c,
	0x20, 0xfb, 0xec, 0x0c, 0xd6, 0x8c, 0xc3, 0x28, 0x2e, 0xa1, 0x6e, 0x69, 0xaf, 0xbd, 0x1d, 0x62,
	0xe3, 0x8c, 0xd5, 0xf4, 0xc0, 0xb8, 0x90, 0xef, 0xc2, 0x11, 0x8f, 0xd3, 0x5d, 0x38, 0x86, 0xa7,
	0xfa, 0xc6, 0x77, 0x7e, 0x2f, 0x15, 0xce, 0x97, 0xa3, 0xd5, 0x68, 0xf3, 0x93, 0xc5, 0x39, 0x54,
	0x3d, 0xe9, 0xb7, 0x28, 0x17, 0x2c, 0x7f, 0xc1, 0x43, 0xf9, 0x9c, 0x93, 0x95, 0xca, 0xba, 0x97,
	0x9c, 0xbf, 0xec, 0xee, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x43, 0x58, 0xf9, 0x62, 0xc5, 0x01, 0x00,
	0x00,
}
