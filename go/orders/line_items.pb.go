// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orders/line_items.proto

package orders

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LineItemId struct {
	DomainId             int64    `protobuf:"varint,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LineItemId) Reset()         { *m = LineItemId{} }
func (m *LineItemId) String() string { return proto.CompactTextString(m) }
func (*LineItemId) ProtoMessage()    {}
func (*LineItemId) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6c6197e5f41fff, []int{0}
}

func (m *LineItemId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LineItemId.Unmarshal(m, b)
}
func (m *LineItemId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LineItemId.Marshal(b, m, deterministic)
}
func (m *LineItemId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LineItemId.Merge(m, src)
}
func (m *LineItemId) XXX_Size() int {
	return xxx_messageInfo_LineItemId.Size(m)
}
func (m *LineItemId) XXX_DiscardUnknown() {
	xxx_messageInfo_LineItemId.DiscardUnknown(m)
}

var xxx_messageInfo_LineItemId proto.InternalMessageInfo

func (m *LineItemId) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *LineItemId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type LineItem struct {
	DomainId             int64    `protobuf:"varint,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Quantity             int64    `protobuf:"varint,11,opt,name=quantity,proto3" json:"quantity,omitempty"`
	FulfillableQuantity  int64    `protobuf:"varint,12,opt,name=fulfillable_quantity,json=fulfillableQuantity,proto3" json:"fulfillable_quantity,omitempty"`
	RequiresShipping     bool     `protobuf:"varint,13,opt,name=requires_shipping,json=requiresShipping,proto3" json:"requires_shipping,omitempty"`
	Name                 string   `protobuf:"bytes,14,opt,name=name,proto3" json:"name,omitempty"`
	Title                string   `protobuf:"bytes,15,opt,name=title,proto3" json:"title,omitempty"`
	Sku                  string   `protobuf:"bytes,16,opt,name=sku,proto3" json:"sku,omitempty"`
	FulfillmentService   string   `protobuf:"bytes,17,opt,name=fulfillment_service,json=fulfillmentService,proto3" json:"fulfillment_service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LineItem) Reset()         { *m = LineItem{} }
func (m *LineItem) String() string { return proto.CompactTextString(m) }
func (*LineItem) ProtoMessage()    {}
func (*LineItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6c6197e5f41fff, []int{1}
}

func (m *LineItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LineItem.Unmarshal(m, b)
}
func (m *LineItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LineItem.Marshal(b, m, deterministic)
}
func (m *LineItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LineItem.Merge(m, src)
}
func (m *LineItem) XXX_Size() int {
	return xxx_messageInfo_LineItem.Size(m)
}
func (m *LineItem) XXX_DiscardUnknown() {
	xxx_messageInfo_LineItem.DiscardUnknown(m)
}

var xxx_messageInfo_LineItem proto.InternalMessageInfo

func (m *LineItem) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *LineItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LineItem) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *LineItem) GetFulfillableQuantity() int64 {
	if m != nil {
		return m.FulfillableQuantity
	}
	return 0
}

func (m *LineItem) GetRequiresShipping() bool {
	if m != nil {
		return m.RequiresShipping
	}
	return false
}

func (m *LineItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LineItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *LineItem) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *LineItem) GetFulfillmentService() string {
	if m != nil {
		return m.FulfillmentService
	}
	return ""
}

func init() {
	proto.RegisterType((*LineItemId)(nil), "LineItemId")
	proto.RegisterType((*LineItem)(nil), "LineItem")
}

func init() { proto.RegisterFile("orders/line_items.proto", fileDescriptor_9a6c6197e5f41fff) }

var fileDescriptor_9a6c6197e5f41fff = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcd, 0x4a, 0x03, 0x31,
	0x14, 0x85, 0x99, 0xa9, 0x0e, 0x33, 0xb7, 0x5a, 0xdb, 0x58, 0x34, 0x4c, 0x51, 0x4a, 0x57, 0x05,
	0x71, 0x06, 0x75, 0xe5, 0xd6, 0x1f, 0xa4, 0xe0, 0xc6, 0x16, 0x37, 0x6e, 0x86, 0xa9, 0xb9, 0xad,
	0xc1, 0xcc, 0x4f, 0x93, 0x8c, 0xd0, 0xb7, 0xf1, 0x35, 0x7c, 0x3b, 0x69, 0xc6, 0xd8, 0xba, 0x10,
	0x71, 0x77, 0xef, 0xf9, 0xce, 0x49, 0x20, 0x39, 0x70, 0x58, 0x48, 0x86, 0x52, 0xc5, 0x82, 0xe7,
	0x98, 0x70, 0x8d, 0x99, 0x8a, 0x4a, 0x59, 0xe8, 0x22, 0xec, 0xcd, 0x8b, 0x62, 0x2e, 0x30, 0x36,
	0xdb, 0xb4, 0x9a, 0xc5, 0x98, 0x95, 0x7a, 0x59, 0xc3, 0xc1, 0x25, 0xc0, 0x3d, 0xcf, 0x71, 0xa4,
	0x31, 0x1b, 0x31, 0xd2, 0x83, 0x80, 0x15, 0x59, 0xca, 0xf3, 0x84, 0x33, 0xea, 0xf4, 0x9d, 0x61,
	0x63, 0xec, 0xd7, 0xc2, 0x88, 0x91, 0x16, 0xb8, 0x9c, 0x51, 0xd7, 0xa8, 0x2e, 0x67, 0x83, 0x77,
	0x17, 0x7c, 0x9b, 0xfd, 0x57, 0x92, 0x84, 0xe0, 0x2f, 0xaa, 0x34, 0xd7, 0x5c, 0x2f, 0x69, 0xb3,
	0xf6, 0xda, 0x9d, 0x9c, 0x41, 0x77, 0x56, 0x89, 0x19, 0x17, 0x22, 0x9d, 0x0a, 0x4c, 0xbe, 0x7d,
	0x3b, 0xc6, 0xb7, 0xbf, 0xc1, 0x1e, 0x6c, 0xe4, 0x04, 0x3a, 0x12, 0x17, 0x15, 0x97, 0xa8, 0x12,
	0xf5, 0xc2, 0xcb, 0x92, 0xe7, 0x73, 0xba, 0xdb, 0x77, 0x86, 0xfe, 0xb8, 0x6d, 0xc1, 0xe4, 0x4b,
	0x27, 0x04, 0xb6, 0xf2, 0x34, 0x43, 0xda, 0xea, 0x3b, 0xc3, 0x60, 0x6c, 0x66, 0xd2, 0x85, 0x6d,
	0xcd, 0xb5, 0x40, 0xba, 0x67, 0xc4, 0x7a, 0x21, 0x6d, 0x68, 0xa8, 0xd7, 0x8a, 0xb6, 0x8d, 0xb6,
	0x1a, 0x49, 0x0c, 0xf6, 0xfe, 0x0c, 0x73, 0x9d, 0x28, 0x94, 0x6f, 0xfc, 0x19, 0x69, 0xc7, 0x38,
	0xc8, 0x06, 0x9a, 0xd4, 0xe4, 0xfc, 0xc3, 0x81, 0xc0, 0x3e, 0x91, 0x22, 0xc7, 0xe0, 0x5d, 0x4b,
	0x4c, 0x35, 0x92, 0x20, 0xb2, 0x6a, 0xb8, 0x1e, 0x57, 0xfc, 0xb1, 0x64, 0x7f, 0x70, 0x85, 0x52,
	0xff, 0xc2, 0x4f, 0xc1, 0xbb, 0x41, 0x81, 0x1a, 0x49, 0x33, 0x5a, 0x7f, 0x6a, 0x78, 0x10, 0xd5,
	0x05, 0x88, 0x6c, 0x01, 0xa2, 0xdb, 0x55, 0x01, 0xc8, 0x11, 0x34, 0xee, 0x50, 0xff, 0xf4, 0xae,
	0x4f, 0xbb, 0xf2, 0x9f, 0xbc, 0xba, 0x51, 0x53, 0xcf, 0x04, 0x2f, 0x3e, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x91, 0x14, 0x02, 0x5d, 0x62, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LineItemsClient is the client API for LineItems service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LineItemsClient interface {
	Create(ctx context.Context, in *LineItem, opts ...grpc.CallOption) (*LineItem, error)
	Update(ctx context.Context, in *LineItem, opts ...grpc.CallOption) (*LineItem, error)
	Upsert(ctx context.Context, in *LineItem, opts ...grpc.CallOption) (*LineItem, error)
	Delete(ctx context.Context, in *LineItemId, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *LineItemId, opts ...grpc.CallOption) (*LineItem, error)
}

type lineItemsClient struct {
	cc *grpc.ClientConn
}

func NewLineItemsClient(cc *grpc.ClientConn) LineItemsClient {
	return &lineItemsClient{cc}
}

func (c *lineItemsClient) Create(ctx context.Context, in *LineItem, opts ...grpc.CallOption) (*LineItem, error) {
	out := new(LineItem)
	err := c.cc.Invoke(ctx, "/LineItems/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lineItemsClient) Update(ctx context.Context, in *LineItem, opts ...grpc.CallOption) (*LineItem, error) {
	out := new(LineItem)
	err := c.cc.Invoke(ctx, "/LineItems/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lineItemsClient) Upsert(ctx context.Context, in *LineItem, opts ...grpc.CallOption) (*LineItem, error) {
	out := new(LineItem)
	err := c.cc.Invoke(ctx, "/LineItems/Upsert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lineItemsClient) Delete(ctx context.Context, in *LineItemId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/LineItems/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lineItemsClient) Get(ctx context.Context, in *LineItemId, opts ...grpc.CallOption) (*LineItem, error) {
	out := new(LineItem)
	err := c.cc.Invoke(ctx, "/LineItems/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LineItemsServer is the server API for LineItems service.
type LineItemsServer interface {
	Create(context.Context, *LineItem) (*LineItem, error)
	Update(context.Context, *LineItem) (*LineItem, error)
	Upsert(context.Context, *LineItem) (*LineItem, error)
	Delete(context.Context, *LineItemId) (*empty.Empty, error)
	Get(context.Context, *LineItemId) (*LineItem, error)
}

// UnimplementedLineItemsServer can be embedded to have forward compatible implementations.
type UnimplementedLineItemsServer struct {
}

func (*UnimplementedLineItemsServer) Create(ctx context.Context, req *LineItem) (*LineItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedLineItemsServer) Update(ctx context.Context, req *LineItem) (*LineItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedLineItemsServer) Upsert(ctx context.Context, req *LineItem) (*LineItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Upsert not implemented")
}
func (*UnimplementedLineItemsServer) Delete(ctx context.Context, req *LineItemId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedLineItemsServer) Get(ctx context.Context, req *LineItemId) (*LineItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterLineItemsServer(s *grpc.Server, srv LineItemsServer) {
	s.RegisterService(&_LineItems_serviceDesc, srv)
}

func _LineItems_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LineItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineItemsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LineItems/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineItemsServer).Create(ctx, req.(*LineItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _LineItems_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LineItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineItemsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LineItems/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineItemsServer).Update(ctx, req.(*LineItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _LineItems_Upsert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LineItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineItemsServer).Upsert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LineItems/Upsert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineItemsServer).Upsert(ctx, req.(*LineItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _LineItems_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LineItemId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineItemsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LineItems/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineItemsServer).Delete(ctx, req.(*LineItemId))
	}
	return interceptor(ctx, in, info, handler)
}

func _LineItems_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LineItemId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineItemsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LineItems/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineItemsServer).Get(ctx, req.(*LineItemId))
	}
	return interceptor(ctx, in, info, handler)
}

var _LineItems_serviceDesc = grpc.ServiceDesc{
	ServiceName: "LineItems",
	HandlerType: (*LineItemsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _LineItems_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _LineItems_Update_Handler,
		},
		{
			MethodName: "Upsert",
			Handler:    _LineItems_Upsert_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _LineItems_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _LineItems_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orders/line_items.proto",
}
