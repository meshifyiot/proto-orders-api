// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orders/orders.proto

package orders

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DomainId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainId) Reset()         { *m = DomainId{} }
func (m *DomainId) String() string { return proto.CompactTextString(m) }
func (*DomainId) ProtoMessage()    {}
func (*DomainId) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{0}
}

func (m *DomainId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainId.Unmarshal(m, b)
}
func (m *DomainId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainId.Marshal(b, m, deterministic)
}
func (m *DomainId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainId.Merge(m, src)
}
func (m *DomainId) XXX_Size() int {
	return xxx_messageInfo_DomainId.Size(m)
}
func (m *DomainId) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainId.DiscardUnknown(m)
}

var xxx_messageInfo_DomainId proto.InternalMessageInfo

func (m *DomainId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DomainFqdn struct {
	Fqdn                 string   `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainFqdn) Reset()         { *m = DomainFqdn{} }
func (m *DomainFqdn) String() string { return proto.CompactTextString(m) }
func (*DomainFqdn) ProtoMessage()    {}
func (*DomainFqdn) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{1}
}

func (m *DomainFqdn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainFqdn.Unmarshal(m, b)
}
func (m *DomainFqdn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainFqdn.Marshal(b, m, deterministic)
}
func (m *DomainFqdn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainFqdn.Merge(m, src)
}
func (m *DomainFqdn) XXX_Size() int {
	return xxx_messageInfo_DomainFqdn.Size(m)
}
func (m *DomainFqdn) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainFqdn.DiscardUnknown(m)
}

var xxx_messageInfo_DomainFqdn proto.InternalMessageInfo

func (m *DomainFqdn) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

type FulfillmentId struct {
	DomainId             int64    `protobuf:"varint,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FulfillmentId) Reset()         { *m = FulfillmentId{} }
func (m *FulfillmentId) String() string { return proto.CompactTextString(m) }
func (*FulfillmentId) ProtoMessage()    {}
func (*FulfillmentId) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{2}
}

func (m *FulfillmentId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FulfillmentId.Unmarshal(m, b)
}
func (m *FulfillmentId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FulfillmentId.Marshal(b, m, deterministic)
}
func (m *FulfillmentId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FulfillmentId.Merge(m, src)
}
func (m *FulfillmentId) XXX_Size() int {
	return xxx_messageInfo_FulfillmentId.Size(m)
}
func (m *FulfillmentId) XXX_DiscardUnknown() {
	xxx_messageInfo_FulfillmentId.DiscardUnknown(m)
}

var xxx_messageInfo_FulfillmentId proto.InternalMessageInfo

func (m *FulfillmentId) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *FulfillmentId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type TenantId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TenantId) Reset()         { *m = TenantId{} }
func (m *TenantId) String() string { return proto.CompactTextString(m) }
func (*TenantId) ProtoMessage()    {}
func (*TenantId) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{3}
}

func (m *TenantId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TenantId.Unmarshal(m, b)
}
func (m *TenantId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TenantId.Marshal(b, m, deterministic)
}
func (m *TenantId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantId.Merge(m, src)
}
func (m *TenantId) XXX_Size() int {
	return xxx_messageInfo_TenantId.Size(m)
}
func (m *TenantId) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantId.DiscardUnknown(m)
}

var xxx_messageInfo_TenantId proto.InternalMessageInfo

func (m *TenantId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// ListOrdersRequest
//
// All filter fields applied with AND operator.
// Zero value in filter (by default) means no filtering.
//
type ListOrdersRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The domain_id adds filtering by Shopify's domain.
	DomainId int64 `protobuf:"varint,3,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	// The folder_id adds filtering by folder.
	FolderId             int64    `protobuf:"varint,4,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrdersRequest) Reset()         { *m = ListOrdersRequest{} }
func (m *ListOrdersRequest) String() string { return proto.CompactTextString(m) }
func (*ListOrdersRequest) ProtoMessage()    {}
func (*ListOrdersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{4}
}

func (m *ListOrdersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrdersRequest.Unmarshal(m, b)
}
func (m *ListOrdersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrdersRequest.Marshal(b, m, deterministic)
}
func (m *ListOrdersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrdersRequest.Merge(m, src)
}
func (m *ListOrdersRequest) XXX_Size() int {
	return xxx_messageInfo_ListOrdersRequest.Size(m)
}
func (m *ListOrdersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrdersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrdersRequest proto.InternalMessageInfo

func (m *ListOrdersRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListOrdersRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListOrdersRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *ListOrdersRequest) GetFolderId() int64 {
	if m != nil {
		return m.FolderId
	}
	return 0
}

type ListOrdersResponse struct {
	// There will be a maximum number of items returned based on the page_size
	// field in the request.
	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrdersResponse) Reset()         { *m = ListOrdersResponse{} }
func (m *ListOrdersResponse) String() string { return proto.CompactTextString(m) }
func (*ListOrdersResponse) ProtoMessage()    {}
func (*ListOrdersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{5}
}

func (m *ListOrdersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrdersResponse.Unmarshal(m, b)
}
func (m *ListOrdersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrdersResponse.Marshal(b, m, deterministic)
}
func (m *ListOrdersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrdersResponse.Merge(m, src)
}
func (m *ListOrdersResponse) XXX_Size() int {
	return xxx_messageInfo_ListOrdersResponse.Size(m)
}
func (m *ListOrdersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrdersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrdersResponse proto.InternalMessageInfo

func (m *ListOrdersResponse) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

func (m *ListOrdersResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetOrderRequest struct {
	// The field will contain id of order.
	OrderId              int64    `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrderRequest) Reset()         { *m = GetOrderRequest{} }
func (m *GetOrderRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrderRequest) ProtoMessage()    {}
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{6}
}

func (m *GetOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrderRequest.Unmarshal(m, b)
}
func (m *GetOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrderRequest.Marshal(b, m, deterministic)
}
func (m *GetOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderRequest.Merge(m, src)
}
func (m *GetOrderRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrderRequest.Size(m)
}
func (m *GetOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderRequest proto.InternalMessageInfo

func (m *GetOrderRequest) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

type CreateOrderRequest struct {
	// The order resource to create.
	Order                *Order   `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrderRequest) Reset()         { *m = CreateOrderRequest{} }
func (m *CreateOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOrderRequest) ProtoMessage()    {}
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{7}
}

func (m *CreateOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrderRequest.Unmarshal(m, b)
}
func (m *CreateOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrderRequest.Marshal(b, m, deterministic)
}
func (m *CreateOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrderRequest.Merge(m, src)
}
func (m *CreateOrderRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOrderRequest.Size(m)
}
func (m *CreateOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrderRequest proto.InternalMessageInfo

func (m *CreateOrderRequest) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type UpdateOrderRequest struct {
	// The order resource which replaces the resource on the server.
	Order *Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	// The update mask applies to the resource. For the `FieldMask` definition,
	// see
	// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateOrderRequest) Reset()         { *m = UpdateOrderRequest{} }
func (m *UpdateOrderRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOrderRequest) ProtoMessage()    {}
func (*UpdateOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{8}
}

func (m *UpdateOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOrderRequest.Unmarshal(m, b)
}
func (m *UpdateOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOrderRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOrderRequest.Merge(m, src)
}
func (m *UpdateOrderRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOrderRequest.Size(m)
}
func (m *UpdateOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOrderRequest proto.InternalMessageInfo

func (m *UpdateOrderRequest) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *UpdateOrderRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type DeleteOrderRequest struct {
	// The resource id of the order to be deleted.
	OrderId              int64    `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteOrderRequest) Reset()         { *m = DeleteOrderRequest{} }
func (m *DeleteOrderRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteOrderRequest) ProtoMessage()    {}
func (*DeleteOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{9}
}

func (m *DeleteOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteOrderRequest.Unmarshal(m, b)
}
func (m *DeleteOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteOrderRequest.Marshal(b, m, deterministic)
}
func (m *DeleteOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteOrderRequest.Merge(m, src)
}
func (m *DeleteOrderRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteOrderRequest.Size(m)
}
func (m *DeleteOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteOrderRequest proto.InternalMessageInfo

func (m *DeleteOrderRequest) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

type ListCustomersRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCustomersRequest) Reset()         { *m = ListCustomersRequest{} }
func (m *ListCustomersRequest) String() string { return proto.CompactTextString(m) }
func (*ListCustomersRequest) ProtoMessage()    {}
func (*ListCustomersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{10}
}

func (m *ListCustomersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCustomersRequest.Unmarshal(m, b)
}
func (m *ListCustomersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCustomersRequest.Marshal(b, m, deterministic)
}
func (m *ListCustomersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCustomersRequest.Merge(m, src)
}
func (m *ListCustomersRequest) XXX_Size() int {
	return xxx_messageInfo_ListCustomersRequest.Size(m)
}
func (m *ListCustomersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCustomersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCustomersRequest proto.InternalMessageInfo

func (m *ListCustomersRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListCustomersRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListCustomersResponse struct {
	// There will be a maximum number of items returned based on the page_size field in the request.
	Customers []*Customer `protobuf:"bytes,1,rep,name=customers,proto3" json:"customers,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCustomersResponse) Reset()         { *m = ListCustomersResponse{} }
func (m *ListCustomersResponse) String() string { return proto.CompactTextString(m) }
func (*ListCustomersResponse) ProtoMessage()    {}
func (*ListCustomersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{11}
}

func (m *ListCustomersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCustomersResponse.Unmarshal(m, b)
}
func (m *ListCustomersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCustomersResponse.Marshal(b, m, deterministic)
}
func (m *ListCustomersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCustomersResponse.Merge(m, src)
}
func (m *ListCustomersResponse) XXX_Size() int {
	return xxx_messageInfo_ListCustomersResponse.Size(m)
}
func (m *ListCustomersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCustomersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCustomersResponse proto.InternalMessageInfo

func (m *ListCustomersResponse) GetCustomers() []*Customer {
	if m != nil {
		return m.Customers
	}
	return nil
}

func (m *ListCustomersResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetCustomerRequest struct {
	// The field will contain id of the resource requested.
	CustomerId           int64    `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCustomerRequest) Reset()         { *m = GetCustomerRequest{} }
func (m *GetCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*GetCustomerRequest) ProtoMessage()    {}
func (*GetCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{12}
}

func (m *GetCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerRequest.Unmarshal(m, b)
}
func (m *GetCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerRequest.Marshal(b, m, deterministic)
}
func (m *GetCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerRequest.Merge(m, src)
}
func (m *GetCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_GetCustomerRequest.Size(m)
}
func (m *GetCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerRequest proto.InternalMessageInfo

func (m *GetCustomerRequest) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

type CreateCustomerRequest struct {
	// The customer id to use for this customer.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// The customer resource to create.
	Customer             *Customer `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateCustomerRequest) Reset()         { *m = CreateCustomerRequest{} }
func (m *CreateCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCustomerRequest) ProtoMessage()    {}
func (*CreateCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{13}
}

func (m *CreateCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCustomerRequest.Unmarshal(m, b)
}
func (m *CreateCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCustomerRequest.Marshal(b, m, deterministic)
}
func (m *CreateCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCustomerRequest.Merge(m, src)
}
func (m *CreateCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCustomerRequest.Size(m)
}
func (m *CreateCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCustomerRequest proto.InternalMessageInfo

func (m *CreateCustomerRequest) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *CreateCustomerRequest) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

type UpdateCustomerRequest struct {
	// The customer resource which replaces the resource on the server.
	Customer *Customer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	// The update mask applies to the resource. For the `FieldMask` definition,
	// see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateCustomerRequest) Reset()         { *m = UpdateCustomerRequest{} }
func (m *UpdateCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCustomerRequest) ProtoMessage()    {}
func (*UpdateCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{14}
}

func (m *UpdateCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCustomerRequest.Unmarshal(m, b)
}
func (m *UpdateCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCustomerRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCustomerRequest.Merge(m, src)
}
func (m *UpdateCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCustomerRequest.Size(m)
}
func (m *UpdateCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCustomerRequest proto.InternalMessageInfo

func (m *UpdateCustomerRequest) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *UpdateCustomerRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type DeleteCustomerRequest struct {
	// The resource id of the customer to be deleted.
	CustomerId           int64    `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCustomerRequest) Reset()         { *m = DeleteCustomerRequest{} }
func (m *DeleteCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCustomerRequest) ProtoMessage()    {}
func (*DeleteCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{15}
}

func (m *DeleteCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCustomerRequest.Unmarshal(m, b)
}
func (m *DeleteCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCustomerRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCustomerRequest.Merge(m, src)
}
func (m *DeleteCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCustomerRequest.Size(m)
}
func (m *DeleteCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCustomerRequest proto.InternalMessageInfo

func (m *DeleteCustomerRequest) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

type ListLineItemsRequest struct {
	// The parent resource name, for example, "shelves/shelf1"
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLineItemsRequest) Reset()         { *m = ListLineItemsRequest{} }
func (m *ListLineItemsRequest) String() string { return proto.CompactTextString(m) }
func (*ListLineItemsRequest) ProtoMessage()    {}
func (*ListLineItemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{16}
}

func (m *ListLineItemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLineItemsRequest.Unmarshal(m, b)
}
func (m *ListLineItemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLineItemsRequest.Marshal(b, m, deterministic)
}
func (m *ListLineItemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLineItemsRequest.Merge(m, src)
}
func (m *ListLineItemsRequest) XXX_Size() int {
	return xxx_messageInfo_ListLineItemsRequest.Size(m)
}
func (m *ListLineItemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLineItemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLineItemsRequest proto.InternalMessageInfo

func (m *ListLineItemsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListLineItemsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListLineItemsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListLineItemsResponse struct {
	// There will be a maximum number of items returned based on the page_size field in the request.
	LineItems []*LineItem `protobuf:"bytes,1,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLineItemsResponse) Reset()         { *m = ListLineItemsResponse{} }
func (m *ListLineItemsResponse) String() string { return proto.CompactTextString(m) }
func (*ListLineItemsResponse) ProtoMessage()    {}
func (*ListLineItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{17}
}

func (m *ListLineItemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLineItemsResponse.Unmarshal(m, b)
}
func (m *ListLineItemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLineItemsResponse.Marshal(b, m, deterministic)
}
func (m *ListLineItemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLineItemsResponse.Merge(m, src)
}
func (m *ListLineItemsResponse) XXX_Size() int {
	return xxx_messageInfo_ListLineItemsResponse.Size(m)
}
func (m *ListLineItemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLineItemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLineItemsResponse proto.InternalMessageInfo

func (m *ListLineItemsResponse) GetLineItems() []*LineItem {
	if m != nil {
		return m.LineItems
	}
	return nil
}

func (m *ListLineItemsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetLineItemRequest struct {
	// The field will contain id of the resource requested.
	LineItemId           int64    `protobuf:"varint,1,opt,name=line_item_id,json=lineItemId,proto3" json:"line_item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLineItemRequest) Reset()         { *m = GetLineItemRequest{} }
func (m *GetLineItemRequest) String() string { return proto.CompactTextString(m) }
func (*GetLineItemRequest) ProtoMessage()    {}
func (*GetLineItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{18}
}

func (m *GetLineItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLineItemRequest.Unmarshal(m, b)
}
func (m *GetLineItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLineItemRequest.Marshal(b, m, deterministic)
}
func (m *GetLineItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLineItemRequest.Merge(m, src)
}
func (m *GetLineItemRequest) XXX_Size() int {
	return xxx_messageInfo_GetLineItemRequest.Size(m)
}
func (m *GetLineItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLineItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLineItemRequest proto.InternalMessageInfo

func (m *GetLineItemRequest) GetLineItemId() int64 {
	if m != nil {
		return m.LineItemId
	}
	return 0
}

type CreateLineItemRequest struct {
	// The line_item id to use for this line_item.
	LineItemId string `protobuf:"bytes,2,opt,name=line_item_id,json=lineItemId,proto3" json:"line_item_id,omitempty"`
	// The line_item resource to create.
	LineItem             *LineItem `protobuf:"bytes,3,opt,name=line_item,json=lineItem,proto3" json:"line_item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateLineItemRequest) Reset()         { *m = CreateLineItemRequest{} }
func (m *CreateLineItemRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLineItemRequest) ProtoMessage()    {}
func (*CreateLineItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{19}
}

func (m *CreateLineItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLineItemRequest.Unmarshal(m, b)
}
func (m *CreateLineItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLineItemRequest.Marshal(b, m, deterministic)
}
func (m *CreateLineItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLineItemRequest.Merge(m, src)
}
func (m *CreateLineItemRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLineItemRequest.Size(m)
}
func (m *CreateLineItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLineItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLineItemRequest proto.InternalMessageInfo

func (m *CreateLineItemRequest) GetLineItemId() string {
	if m != nil {
		return m.LineItemId
	}
	return ""
}

func (m *CreateLineItemRequest) GetLineItem() *LineItem {
	if m != nil {
		return m.LineItem
	}
	return nil
}

type UpdateLineItemRequest struct {
	// The line_item resource which replaces the resource on the server.
	LineItem *LineItem `protobuf:"bytes,1,opt,name=line_item,json=lineItem,proto3" json:"line_item,omitempty"`
	// The update mask applies to the resource. For the `FieldMask` definition,
	// see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateLineItemRequest) Reset()         { *m = UpdateLineItemRequest{} }
func (m *UpdateLineItemRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLineItemRequest) ProtoMessage()    {}
func (*UpdateLineItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{20}
}

func (m *UpdateLineItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLineItemRequest.Unmarshal(m, b)
}
func (m *UpdateLineItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLineItemRequest.Marshal(b, m, deterministic)
}
func (m *UpdateLineItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLineItemRequest.Merge(m, src)
}
func (m *UpdateLineItemRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLineItemRequest.Size(m)
}
func (m *UpdateLineItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLineItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLineItemRequest proto.InternalMessageInfo

func (m *UpdateLineItemRequest) GetLineItem() *LineItem {
	if m != nil {
		return m.LineItem
	}
	return nil
}

func (m *UpdateLineItemRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type DeleteLineItemRequest struct {
	// The resource id of the line_item to be deleted.
	LineItemId           int64    `protobuf:"varint,1,opt,name=line_item_id,json=lineItemId,proto3" json:"line_item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLineItemRequest) Reset()         { *m = DeleteLineItemRequest{} }
func (m *DeleteLineItemRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLineItemRequest) ProtoMessage()    {}
func (*DeleteLineItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_858c8aeb08cfe87b, []int{21}
}

func (m *DeleteLineItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLineItemRequest.Unmarshal(m, b)
}
func (m *DeleteLineItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLineItemRequest.Marshal(b, m, deterministic)
}
func (m *DeleteLineItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLineItemRequest.Merge(m, src)
}
func (m *DeleteLineItemRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLineItemRequest.Size(m)
}
func (m *DeleteLineItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLineItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLineItemRequest proto.InternalMessageInfo

func (m *DeleteLineItemRequest) GetLineItemId() int64 {
	if m != nil {
		return m.LineItemId
	}
	return 0
}

func init() {
	proto.RegisterType((*DomainId)(nil), "DomainId")
	proto.RegisterType((*DomainFqdn)(nil), "DomainFqdn")
	proto.RegisterType((*FulfillmentId)(nil), "FulfillmentId")
	proto.RegisterType((*TenantId)(nil), "TenantId")
	proto.RegisterType((*ListOrdersRequest)(nil), "ListOrdersRequest")
	proto.RegisterType((*ListOrdersResponse)(nil), "ListOrdersResponse")
	proto.RegisterType((*GetOrderRequest)(nil), "GetOrderRequest")
	proto.RegisterType((*CreateOrderRequest)(nil), "CreateOrderRequest")
	proto.RegisterType((*UpdateOrderRequest)(nil), "UpdateOrderRequest")
	proto.RegisterType((*DeleteOrderRequest)(nil), "DeleteOrderRequest")
	proto.RegisterType((*ListCustomersRequest)(nil), "ListCustomersRequest")
	proto.RegisterType((*ListCustomersResponse)(nil), "ListCustomersResponse")
	proto.RegisterType((*GetCustomerRequest)(nil), "GetCustomerRequest")
	proto.RegisterType((*CreateCustomerRequest)(nil), "CreateCustomerRequest")
	proto.RegisterType((*UpdateCustomerRequest)(nil), "UpdateCustomerRequest")
	proto.RegisterType((*DeleteCustomerRequest)(nil), "DeleteCustomerRequest")
	proto.RegisterType((*ListLineItemsRequest)(nil), "ListLineItemsRequest")
	proto.RegisterType((*ListLineItemsResponse)(nil), "ListLineItemsResponse")
	proto.RegisterType((*GetLineItemRequest)(nil), "GetLineItemRequest")
	proto.RegisterType((*CreateLineItemRequest)(nil), "CreateLineItemRequest")
	proto.RegisterType((*UpdateLineItemRequest)(nil), "UpdateLineItemRequest")
	proto.RegisterType((*DeleteLineItemRequest)(nil), "DeleteLineItemRequest")
}

func init() { proto.RegisterFile("orders/orders.proto", fileDescriptor_858c8aeb08cfe87b) }

var fileDescriptor_858c8aeb08cfe87b = []byte{
	// 1266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xcb, 0x92, 0xdb, 0x44,
	0x17, 0x2e, 0xd9, 0x89, 0x63, 0x1d, 0xcf, 0x78, 0x92, 0xe3, 0xdf, 0xfe, 0x33, 0x9a, 0x0c, 0x71,
	0x3a, 0x24, 0x4c, 0x0d, 0x71, 0x2b, 0x31, 0x05, 0x05, 0x86, 0x05, 0xb9, 0xcd, 0x94, 0xab, 0x02,
	0x04, 0x67, 0x92, 0x2a, 0x6e, 0xe5, 0xd2, 0x58, 0x6d, 0x8f, 0x32, 0xb6, 0xa4, 0x58, 0x72, 0x20,
	0x19, 0xb2, 0x61, 0xc7, 0x12, 0x58, 0xb3, 0x60, 0xcf, 0x86, 0x67, 0xe1, 0x15, 0x78, 0x10, 0x4a,
	0xdd, 0x6a, 0xa9, 0x25, 0x5f, 0x92, 0x54, 0x58, 0x59, 0x7d, 0x2e, 0xdf, 0xb9, 0xfa, 0x93, 0x1a,
	0x6a, 0xde, 0xd4, 0x66, 0xd3, 0xc0, 0x14, 0x3f, 0xd4, 0x9f, 0x7a, 0xa1, 0x67, 0x5c, 0x18, 0x79,
	0xde, 0x68, 0xcc, 0x4c, 0xcb, 0x77, 0x4c, 0xcb, 0x75, 0xbd, 0xd0, 0x0a, 0x1d, 0xcf, 0x95, 0xda,
	0xad, 0x58, 0xcb, 0x4f, 0x87, 0xb3, 0xa1, 0xc9, 0x26, 0x7e, 0xf8, 0x2c, 0x56, 0x36, 0xf3, 0xca,
	0xa1, 0xc3, 0xc6, 0x76, 0x7f, 0x62, 0x05, 0xc7, 0xb1, 0xc5, 0x35, 0xfe, 0x33, 0x68, 0x8d, 0x98,
	0xdb, 0x0a, 0xbe, 0xb7, 0x46, 0x23, 0x36, 0x35, 0x3d, 0x9f, 0x07, 0x58, 0x10, 0xec, 0x5c, 0x9c,
	0xdf, 0xc0, 0x9b, 0x32, 0x21, 0x22, 0x06, 0x94, 0xef, 0x78, 0x13, 0xcb, 0x71, 0xbb, 0x36, 0x56,
	0xa1, 0xe0, 0xd8, 0xe7, 0xb5, 0xa6, 0xb6, 0x53, 0xec, 0x15, 0x1c, 0x9b, 0x34, 0x01, 0x84, 0x6e,
	0xef, 0x89, 0xed, 0x22, 0xc2, 0xa9, 0xe1, 0x13, 0xdb, 0xe5, 0x7a, 0xbd, 0xc7, 0x9f, 0xc9, 0x27,
	0xb0, 0xbe, 0x37, 0x1b, 0x0f, 0x9d, 0xf1, 0x78, 0xc2, 0xdc, 0xb0, 0x6b, 0xe3, 0x16, 0xe8, 0x36,
	0x77, 0xe9, 0x27, 0x48, 0x65, 0x3b, 0x8b, 0x5f, 0x48, 0xf0, 0x0d, 0x28, 0x1f, 0x30, 0xd7, 0xe2,
	0x8e, 0xf9, 0xd8, 0x3f, 0x6b, 0x70, 0xee, 0x9e, 0x13, 0x84, 0x5f, 0xf0, 0x8c, 0x7b, 0xec, 0xc9,
	0x8c, 0x05, 0x61, 0x04, 0xef, 0x5b, 0x23, 0xd6, 0x0f, 0x9c, 0xe7, 0x8c, 0x1b, 0x9f, 0xee, 0x95,
	0x23, 0xc1, 0x03, 0xe7, 0x39, 0xc3, 0x6d, 0x00, 0xae, 0x0c, 0xbd, 0x63, 0xe6, 0xf2, 0x30, 0x7a,
	0x8f, 0x9b, 0x1f, 0x44, 0x82, 0x6c, 0x6a, 0xc5, 0x5c, 0x6a, 0x5b, 0xa0, 0x0f, 0xbd, 0xb1, 0xcd,
	0xa6, 0x91, 0xf2, 0x94, 0x50, 0x0a, 0x41, 0xd7, 0x26, 0xdf, 0x02, 0xaa, 0xa9, 0x04, 0xbe, 0xe7,
	0x06, 0x0c, 0xdf, 0x82, 0x92, 0x68, 0xe7, 0x79, 0xad, 0x59, 0xdc, 0xa9, 0xb4, 0x4b, 0x94, 0x1b,
	0xf4, 0x62, 0x29, 0x5e, 0x85, 0x0d, 0x97, 0xfd, 0x10, 0xf6, 0xe7, 0x72, 0x5a, 0x8f, 0xc4, 0xf7,
	0x65, 0x5e, 0xe4, 0x1a, 0x6c, 0xec, 0x33, 0x01, 0x2e, 0xcb, 0xdc, 0x84, 0x32, 0x07, 0x49, 0x9b,
	0x78, 0x86, 0x9f, 0xbb, 0x36, 0x69, 0x03, 0xde, 0x9e, 0x32, 0x2b, 0x64, 0x19, 0x87, 0x0b, 0x70,
	0x9a, 0x1b, 0xf0, 0xba, 0xd2, 0x54, 0x84, 0x90, 0x78, 0x80, 0x0f, 0x7d, 0x7b, 0xa9, 0x8f, 0xb6,
	0xc0, 0x07, 0x3f, 0x86, 0xca, 0x8c, 0xfb, 0xf0, 0x6d, 0xe3, 0x99, 0x57, 0xda, 0x06, 0x15, 0x0b,
	0x49, 0xe5, 0x42, 0xd2, 0xbd, 0x68, 0x21, 0x3f, 0xb3, 0x82, 0xe3, 0x1e, 0x08, 0xf3, 0xe8, 0x99,
	0x98, 0x80, 0x77, 0xd8, 0x98, 0xe5, 0x02, 0xae, 0xa8, 0xaa, 0x07, 0xff, 0x8b, 0x3a, 0x7c, 0x7b,
	0x16, 0x84, 0xde, 0xe4, 0xbf, 0x99, 0x37, 0x39, 0x82, 0x7a, 0x0e, 0x33, 0x1e, 0xdc, 0x3b, 0xa0,
	0x0f, 0xa4, 0x30, 0x9e, 0x9d, 0x4e, 0xa5, 0x59, 0x2f, 0xd5, 0xbd, 0xf2, 0x04, 0xdf, 0x07, 0xdc,
	0x67, 0x49, 0x20, 0x99, 0xfb, 0x45, 0xa8, 0x48, 0xa8, 0xb4, 0x62, 0x90, 0xa2, 0xae, 0x4d, 0xfa,
	0x50, 0x17, 0xa3, 0x7c, 0x05, 0x4f, 0x5d, 0xf5, 0xc4, 0x2b, 0x50, 0x96, 0xa7, 0x78, 0x32, 0x4a,
	0x01, 0x89, 0x8a, 0x9c, 0x40, 0x5d, 0xcc, 0x3d, 0x1f, 0x40, 0xf5, 0xd7, 0x96, 0xfa, 0xbf, 0xd9,
	0x0e, 0x7c, 0x08, 0x75, 0xb1, 0x03, 0xaf, 0xdd, 0x97, 0xc7, 0x62, 0x19, 0xee, 0x39, 0x2e, 0xeb,
	0x86, 0x6c, 0x92, 0x2c, 0x43, 0x03, 0x4a, 0xbe, 0x35, 0x65, 0x6e, 0x18, 0x77, 0x24, 0x3e, 0x65,
	0x97, 0xa4, 0xb0, 0x72, 0x49, 0x8a, 0xf9, 0x25, 0x71, 0xc4, 0x92, 0x28, 0xb1, 0xe2, 0x25, 0xd9,
	0x01, 0x18, 0x3b, 0x2e, 0xeb, 0x3b, 0x91, 0x34, 0xd9, 0x12, 0x69, 0xd7, 0xd3, 0xc7, 0xd2, 0xe3,
	0x95, 0xb7, 0xe4, 0x03, 0xbe, 0x25, 0x09, 0x42, 0x5c, 0x54, 0x13, 0xd6, 0x92, 0x38, 0x4a, 0x3b,
	0x24, 0x7c, 0xd7, 0x26, 0x96, 0x5c, 0x93, 0x97, 0xb9, 0x8a, 0xa8, 0x8a, 0x2b, 0x5e, 0x05, 0x3d,
	0xb1, 0x88, 0xa9, 0x41, 0xa9, 0xa1, 0x2c, 0x2d, 0xc9, 0x8f, 0x72, 0x51, 0xf2, 0x21, 0x32, 0x00,
	0xda, 0x52, 0x80, 0x37, 0xdb, 0x94, 0x8f, 0xe4, 0xa6, 0xbc, 0x76, 0x6f, 0xda, 0x7f, 0x00, 0xac,
	0x71, 0x8e, 0x79, 0xc0, 0xa6, 0x4f, 0x9d, 0x01, 0xc3, 0x2e, 0x40, 0x4a, 0xd5, 0x88, 0x74, 0xee,
	0x15, 0x62, 0xd4, 0xe8, 0x3c, 0x97, 0x13, 0xfc, 0xe9, 0xef, 0x7f, 0x7e, 0x2b, 0xac, 0x21, 0x98,
	0x4f, 0x6f, 0xc4, 0x6f, 0x6f, 0xbc, 0x0d, 0x65, 0xc9, 0xcb, 0x78, 0x96, 0xe6, 0x28, 0xda, 0x88,
	0xe9, 0x92, 0x6c, 0x73, 0xcf, 0xff, 0x63, 0x3d, 0xf5, 0x34, 0x4f, 0x24, 0xcd, 0xbd, 0xc0, 0xbb,
	0x50, 0x51, 0xe8, 0x1a, 0x6b, 0x74, 0x9e, 0xbc, 0x13, 0xa8, 0x4d, 0x0e, 0x55, 0x23, 0x4a, 0x12,
	0x9d, 0x98, 0x8d, 0xef, 0x41, 0x45, 0x61, 0x70, 0xac, 0xd1, 0x79, 0x3e, 0x4f, 0x60, 0x9a, 0x1c,
	0xc6, 0x68, 0xcf, 0x67, 0x44, 0x1d, 0xfb, 0x45, 0x47, 0xdb, 0xc5, 0xaf, 0xa0, 0xa2, 0xd0, 0x33,
	0xd6, 0xe8, 0x3c, 0x59, 0x1b, 0x8d, 0xb9, 0xe1, 0xdd, 0x8d, 0x3e, 0x4c, 0x64, 0xbd, 0xbb, 0x4b,
	0xea, 0x7d, 0x08, 0xeb, 0x19, 0xd2, 0xc5, 0x3a, 0x5d, 0x44, 0xec, 0x46, 0x83, 0x2e, 0xe4, 0x66,
	0x52, 0xe7, 0xf0, 0x1b, 0xb8, 0x1e, 0xc1, 0xa7, 0x4c, 0xdc, 0x83, 0x8a, 0xc2, 0xb0, 0x58, 0xa3,
	0xf3, 0x7c, 0x6b, 0xa4, 0x14, 0x46, 0x2e, 0x73, 0x94, 0x6d, 0xdc, 0xca, 0xa0, 0x98, 0x27, 0x0a,
	0xef, 0xbc, 0xc0, 0x03, 0xa8, 0x66, 0xe9, 0x17, 0x1b, 0x74, 0x21, 0x1f, 0xab, 0xc8, 0x17, 0x39,
	0xf2, 0x26, 0xc9, 0xe6, 0xd7, 0x49, 0x39, 0xf3, 0x1b, 0xa8, 0x66, 0x39, 0x17, 0x1b, 0x74, 0x21,
	0x09, 0xab, 0xa8, 0x57, 0x39, 0x6a, 0xb3, 0xbd, 0x2c, 0x5f, 0x39, 0x38, 0x06, 0xd5, 0x2c, 0xa7,
	0x62, 0x83, 0x2e, 0x24, 0xd9, 0xa5, 0xe3, 0x8b, 0x3b, 0xb3, 0xbb, 0xb2, 0x33, 0x8f, 0xc4, 0x10,
	0x13, 0x52, 0x8c, 0x87, 0x98, 0x27, 0xe4, 0x78, 0x88, 0x73, 0xdc, 0x49, 0x1a, 0x3c, 0xc8, 0x59,
	0xac, 0x46, 0x41, 0x52, 0x16, 0xc5, 0x03, 0x3e, 0x45, 0x69, 0x2f, 0xa6, 0x98, 0xfb, 0xcf, 0x1b,
	0x29, 0xbd, 0x90, 0x2b, 0x1c, 0xe6, 0x22, 0x6e, 0x67, 0x61, 0xcc, 0x13, 0x95, 0x14, 0xa2, 0x6c,
	0xab, 0x59, 0x7e, 0x4c, 0xe6, 0xb8, 0x02, 0xfb, 0x12, 0xc7, 0xde, 0x22, 0xb9, 0x14, 0x3b, 0x29,
	0xdd, 0xe1, 0x77, 0x72, 0x92, 0x0a, 0xee, 0x42, 0x96, 0x54, 0x71, 0x77, 0x38, 0x2e, 0x69, 0x2f,
	0xcf, 0x59, 0xce, 0x72, 0x24, 0x67, 0xa9, 0xc0, 0x2f, 0xa4, 0xc1, 0xa5, 0xb3, 0x8c, 0xfb, 0xb3,
	0xbb, 0xba, 0x3f, 0xed, 0x3f, 0x35, 0x38, 0x23, 0x3e, 0xe3, 0x03, 0x34, 0xa0, 0x24, 0x5a, 0x83,
	0x67, 0xa8, 0x90, 0x19, 0xf2, 0x21, 0xd2, 0x89, 0xf2, 0x16, 0xe8, 0xde, 0x85, 0x92, 0xc8, 0x0d,
	0x75, 0x2a, 0xaf, 0x0b, 0xcb, 0xf2, 0xc2, 0x4d, 0x28, 0xee, 0xb3, 0x50, 0xb5, 0x4c, 0x70, 0x2e,
	0x81, 0xbe, 0xcf, 0xc2, 0x5b, 0xcf, 0xf6, 0xbe, 0xbc, 0xf3, 0x39, 0x56, 0x68, 0x7a, 0xbb, 0x48,
	0x4c, 0xda, 0x7f, 0x69, 0xb0, 0xa6, 0xdc, 0x29, 0x02, 0x7c, 0x3b, 0xc9, 0x79, 0x8d, 0x2a, 0x0a,
	0x23, 0x73, 0x8a, 0xac, 0xe2, 0xec, 0x57, 0x59, 0x5d, 0x4f, 0xea, 0xa8, 0xd2, 0xcc, 0xc5, 0x65,
	0x69, 0x31, 0x97, 0x45, 0x31, 0x79, 0xf3, 0x0c, 0x2c, 0x6f, 0xb1, 0xb8, 0xc9, 0x64, 0x5b, 0x2c,
	0x64, 0x86, 0x7c, 0xc8, 0xb4, 0x38, 0xaf, 0x53, 0x5b, 0x2c, 0x6f, 0x45, 0x2f, 0x6f, 0x71, 0x62,
	0x99, 0xe0, 0xac, 0x6a, 0xb1, 0x30, 0xb9, 0xf5, 0xbb, 0xf6, 0xeb, 0xcd, 0x5f, 0x34, 0x3c, 0x02,
	0x5d, 0xbc, 0x06, 0x6f, 0xde, 0xef, 0x92, 0x47, 0x50, 0x1b, 0x58, 0xd3, 0x43, 0xcf, 0x6d, 0x1d,
	0x5a, 0x83, 0x63, 0xe6, 0xda, 0xad, 0x90, 0x59, 0x13, 0xa4, 0x47, 0x61, 0xe8, 0x07, 0x1d, 0xd3,
	0x1c, 0x39, 0xe1, 0xd1, 0xec, 0x90, 0x0e, 0xbc, 0x89, 0x39, 0x61, 0xc1, 0x91, 0x33, 0x7c, 0xe6,
	0x78, 0xa1, 0xb8, 0x98, 0xb6, 0xc4, 0x6b, 0xa0, 0x65, 0xf9, 0x8e, 0xb1, 0x61, 0xb3, 0xa7, 0x9f,
	0xc6, 0x06, 0x91, 0x71, 0xbb, 0x78, 0x83, 0x5e, 0xdf, 0xd5, 0x0a, 0xed, 0xb3, 0x96, 0xef, 0x8f,
	0x9d, 0x01, 0xbf, 0x8e, 0x9a, 0x8f, 0x03, 0xcf, 0xed, 0xcc, 0x49, 0xbe, 0x8e, 0x6f, 0x4e, 0x87,
	0x25, 0x0e, 0xfb, 0xde, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x84, 0x8a, 0x5a, 0x4f, 0x0f,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	// ListOrders returns paginated list of orders.
	ListOrders(ctx context.Context, in *ListOrdersRequest, opts ...grpc.CallOption) (*ListOrdersResponse, error)
	// GetOrder returns an order.
	GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*Order, error)
	// CreateOrder creates an order.
	CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*Order, error)
	// UpdateOrder updates an order.
	UpdateOrder(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*Order, error)
	// DeleteOrder deletes an order.
	DeleteOrder(ctx context.Context, in *DeleteOrderRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ListCustomers(ctx context.Context, in *ListCustomersRequest, opts ...grpc.CallOption) (*ListCustomersResponse, error)
	GetCustomer(ctx context.Context, in *GetCustomerRequest, opts ...grpc.CallOption) (*Customer, error)
	CreateCustomer(ctx context.Context, in *CreateCustomerRequest, opts ...grpc.CallOption) (*Customer, error)
	UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, opts ...grpc.CallOption) (*Customer, error)
	DeleteCustomer(ctx context.Context, in *DeleteCustomerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ListLineItems(ctx context.Context, in *ListLineItemsRequest, opts ...grpc.CallOption) (*ListLineItemsResponse, error)
	GetLineItem(ctx context.Context, in *GetLineItemRequest, opts ...grpc.CallOption) (*LineItem, error)
	CreateLineItem(ctx context.Context, in *CreateLineItemRequest, opts ...grpc.CallOption) (*LineItem, error)
	UpdateLineItem(ctx context.Context, in *UpdateLineItemRequest, opts ...grpc.CallOption) (*LineItem, error)
	DeleteLineItem(ctx context.Context, in *DeleteLineItemRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) ListOrders(ctx context.Context, in *ListOrdersRequest, opts ...grpc.CallOption) (*ListOrdersResponse, error) {
	out := new(ListOrdersResponse)
	err := c.cc.Invoke(ctx, "/OrderService/ListOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/OrderService/GetOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/OrderService/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) UpdateOrder(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/OrderService/UpdateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) DeleteOrder(ctx context.Context, in *DeleteOrderRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/OrderService/DeleteOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) ListCustomers(ctx context.Context, in *ListCustomersRequest, opts ...grpc.CallOption) (*ListCustomersResponse, error) {
	out := new(ListCustomersResponse)
	err := c.cc.Invoke(ctx, "/OrderService/ListCustomers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) GetCustomer(ctx context.Context, in *GetCustomerRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/OrderService/GetCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) CreateCustomer(ctx context.Context, in *CreateCustomerRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/OrderService/CreateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/OrderService/UpdateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) DeleteCustomer(ctx context.Context, in *DeleteCustomerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/OrderService/DeleteCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) ListLineItems(ctx context.Context, in *ListLineItemsRequest, opts ...grpc.CallOption) (*ListLineItemsResponse, error) {
	out := new(ListLineItemsResponse)
	err := c.cc.Invoke(ctx, "/OrderService/ListLineItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) GetLineItem(ctx context.Context, in *GetLineItemRequest, opts ...grpc.CallOption) (*LineItem, error) {
	out := new(LineItem)
	err := c.cc.Invoke(ctx, "/OrderService/GetLineItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) CreateLineItem(ctx context.Context, in *CreateLineItemRequest, opts ...grpc.CallOption) (*LineItem, error) {
	out := new(LineItem)
	err := c.cc.Invoke(ctx, "/OrderService/CreateLineItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) UpdateLineItem(ctx context.Context, in *UpdateLineItemRequest, opts ...grpc.CallOption) (*LineItem, error) {
	out := new(LineItem)
	err := c.cc.Invoke(ctx, "/OrderService/UpdateLineItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) DeleteLineItem(ctx context.Context, in *DeleteLineItemRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/OrderService/DeleteLineItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	// ListOrders returns paginated list of orders.
	ListOrders(context.Context, *ListOrdersRequest) (*ListOrdersResponse, error)
	// GetOrder returns an order.
	GetOrder(context.Context, *GetOrderRequest) (*Order, error)
	// CreateOrder creates an order.
	CreateOrder(context.Context, *CreateOrderRequest) (*Order, error)
	// UpdateOrder updates an order.
	UpdateOrder(context.Context, *UpdateOrderRequest) (*Order, error)
	// DeleteOrder deletes an order.
	DeleteOrder(context.Context, *DeleteOrderRequest) (*empty.Empty, error)
	ListCustomers(context.Context, *ListCustomersRequest) (*ListCustomersResponse, error)
	GetCustomer(context.Context, *GetCustomerRequest) (*Customer, error)
	CreateCustomer(context.Context, *CreateCustomerRequest) (*Customer, error)
	UpdateCustomer(context.Context, *UpdateCustomerRequest) (*Customer, error)
	DeleteCustomer(context.Context, *DeleteCustomerRequest) (*empty.Empty, error)
	ListLineItems(context.Context, *ListLineItemsRequest) (*ListLineItemsResponse, error)
	GetLineItem(context.Context, *GetLineItemRequest) (*LineItem, error)
	CreateLineItem(context.Context, *CreateLineItemRequest) (*LineItem, error)
	UpdateLineItem(context.Context, *UpdateLineItemRequest) (*LineItem, error)
	DeleteLineItem(context.Context, *DeleteLineItemRequest) (*empty.Empty, error)
}

// UnimplementedOrderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServiceServer struct {
}

func (*UnimplementedOrderServiceServer) ListOrders(ctx context.Context, req *ListOrdersRequest) (*ListOrdersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOrders not implemented")
}
func (*UnimplementedOrderServiceServer) GetOrder(ctx context.Context, req *GetOrderRequest) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrder not implemented")
}
func (*UnimplementedOrderServiceServer) CreateOrder(ctx context.Context, req *CreateOrderRequest) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrder not implemented")
}
func (*UnimplementedOrderServiceServer) UpdateOrder(ctx context.Context, req *UpdateOrderRequest) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrder not implemented")
}
func (*UnimplementedOrderServiceServer) DeleteOrder(ctx context.Context, req *DeleteOrderRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOrder not implemented")
}
func (*UnimplementedOrderServiceServer) ListCustomers(ctx context.Context, req *ListCustomersRequest) (*ListCustomersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCustomers not implemented")
}
func (*UnimplementedOrderServiceServer) GetCustomer(ctx context.Context, req *GetCustomerRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomer not implemented")
}
func (*UnimplementedOrderServiceServer) CreateCustomer(ctx context.Context, req *CreateCustomerRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomer not implemented")
}
func (*UnimplementedOrderServiceServer) UpdateCustomer(ctx context.Context, req *UpdateCustomerRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomer not implemented")
}
func (*UnimplementedOrderServiceServer) DeleteCustomer(ctx context.Context, req *DeleteCustomerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCustomer not implemented")
}
func (*UnimplementedOrderServiceServer) ListLineItems(ctx context.Context, req *ListLineItemsRequest) (*ListLineItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLineItems not implemented")
}
func (*UnimplementedOrderServiceServer) GetLineItem(ctx context.Context, req *GetLineItemRequest) (*LineItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLineItem not implemented")
}
func (*UnimplementedOrderServiceServer) CreateLineItem(ctx context.Context, req *CreateLineItemRequest) (*LineItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLineItem not implemented")
}
func (*UnimplementedOrderServiceServer) UpdateLineItem(ctx context.Context, req *UpdateLineItemRequest) (*LineItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLineItem not implemented")
}
func (*UnimplementedOrderServiceServer) DeleteLineItem(ctx context.Context, req *DeleteLineItemRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLineItem not implemented")
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_ListOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).ListOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/ListOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).ListOrders(ctx, req.(*ListOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/GetOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetOrder(ctx, req.(*GetOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CreateOrder(ctx, req.(*CreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_UpdateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).UpdateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/UpdateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).UpdateOrder(ctx, req.(*UpdateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_DeleteOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).DeleteOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/DeleteOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).DeleteOrder(ctx, req.(*DeleteOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_ListCustomers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCustomersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).ListCustomers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/ListCustomers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).ListCustomers(ctx, req.(*ListCustomersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_GetCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/GetCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetCustomer(ctx, req.(*GetCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CreateCustomer(ctx, req.(*CreateCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_UpdateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).UpdateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/UpdateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).UpdateCustomer(ctx, req.(*UpdateCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_DeleteCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).DeleteCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/DeleteCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).DeleteCustomer(ctx, req.(*DeleteCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_ListLineItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLineItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).ListLineItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/ListLineItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).ListLineItems(ctx, req.(*ListLineItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_GetLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLineItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/GetLineItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetLineItem(ctx, req.(*GetLineItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_CreateLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLineItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CreateLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/CreateLineItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CreateLineItem(ctx, req.(*CreateLineItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_UpdateLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLineItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).UpdateLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/UpdateLineItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).UpdateLineItem(ctx, req.(*UpdateLineItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_DeleteLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLineItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).DeleteLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrderService/DeleteLineItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).DeleteLineItem(ctx, req.(*DeleteLineItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListOrders",
			Handler:    _OrderService_ListOrders_Handler,
		},
		{
			MethodName: "GetOrder",
			Handler:    _OrderService_GetOrder_Handler,
		},
		{
			MethodName: "CreateOrder",
			Handler:    _OrderService_CreateOrder_Handler,
		},
		{
			MethodName: "UpdateOrder",
			Handler:    _OrderService_UpdateOrder_Handler,
		},
		{
			MethodName: "DeleteOrder",
			Handler:    _OrderService_DeleteOrder_Handler,
		},
		{
			MethodName: "ListCustomers",
			Handler:    _OrderService_ListCustomers_Handler,
		},
		{
			MethodName: "GetCustomer",
			Handler:    _OrderService_GetCustomer_Handler,
		},
		{
			MethodName: "CreateCustomer",
			Handler:    _OrderService_CreateCustomer_Handler,
		},
		{
			MethodName: "UpdateCustomer",
			Handler:    _OrderService_UpdateCustomer_Handler,
		},
		{
			MethodName: "DeleteCustomer",
			Handler:    _OrderService_DeleteCustomer_Handler,
		},
		{
			MethodName: "ListLineItems",
			Handler:    _OrderService_ListLineItems_Handler,
		},
		{
			MethodName: "GetLineItem",
			Handler:    _OrderService_GetLineItem_Handler,
		},
		{
			MethodName: "CreateLineItem",
			Handler:    _OrderService_CreateLineItem_Handler,
		},
		{
			MethodName: "UpdateLineItem",
			Handler:    _OrderService_UpdateLineItem_Handler,
		},
		{
			MethodName: "DeleteLineItem",
			Handler:    _OrderService_DeleteLineItem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orders/orders.proto",
}

// DomainsClient is the client API for Domains service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DomainsClient interface {
	Create(ctx context.Context, in *Domain, opts ...grpc.CallOption) (*Domain, error)
	Update(ctx context.Context, in *Domain, opts ...grpc.CallOption) (*Domain, error)
	Delete(ctx context.Context, in *DomainId, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *DomainId, opts ...grpc.CallOption) (*Domain, error)
	GetByFQDN(ctx context.Context, in *DomainFqdn, opts ...grpc.CallOption) (*Domain, error)
}

type domainsClient struct {
	cc *grpc.ClientConn
}

func NewDomainsClient(cc *grpc.ClientConn) DomainsClient {
	return &domainsClient{cc}
}

func (c *domainsClient) Create(ctx context.Context, in *Domain, opts ...grpc.CallOption) (*Domain, error) {
	out := new(Domain)
	err := c.cc.Invoke(ctx, "/Domains/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainsClient) Update(ctx context.Context, in *Domain, opts ...grpc.CallOption) (*Domain, error) {
	out := new(Domain)
	err := c.cc.Invoke(ctx, "/Domains/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainsClient) Delete(ctx context.Context, in *DomainId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Domains/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainsClient) Get(ctx context.Context, in *DomainId, opts ...grpc.CallOption) (*Domain, error) {
	out := new(Domain)
	err := c.cc.Invoke(ctx, "/Domains/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainsClient) GetByFQDN(ctx context.Context, in *DomainFqdn, opts ...grpc.CallOption) (*Domain, error) {
	out := new(Domain)
	err := c.cc.Invoke(ctx, "/Domains/GetByFQDN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DomainsServer is the server API for Domains service.
type DomainsServer interface {
	Create(context.Context, *Domain) (*Domain, error)
	Update(context.Context, *Domain) (*Domain, error)
	Delete(context.Context, *DomainId) (*empty.Empty, error)
	Get(context.Context, *DomainId) (*Domain, error)
	GetByFQDN(context.Context, *DomainFqdn) (*Domain, error)
}

// UnimplementedDomainsServer can be embedded to have forward compatible implementations.
type UnimplementedDomainsServer struct {
}

func (*UnimplementedDomainsServer) Create(ctx context.Context, req *Domain) (*Domain, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedDomainsServer) Update(ctx context.Context, req *Domain) (*Domain, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedDomainsServer) Delete(ctx context.Context, req *DomainId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedDomainsServer) Get(ctx context.Context, req *DomainId) (*Domain, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedDomainsServer) GetByFQDN(ctx context.Context, req *DomainFqdn) (*Domain, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByFQDN not implemented")
}

func RegisterDomainsServer(s *grpc.Server, srv DomainsServer) {
	s.RegisterService(&_Domains_serviceDesc, srv)
}

func _Domains_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Domain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Domains/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainsServer).Create(ctx, req.(*Domain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Domains_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Domain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Domains/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainsServer).Update(ctx, req.(*Domain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Domains_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DomainId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Domains/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainsServer).Delete(ctx, req.(*DomainId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Domains_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DomainId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Domains/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainsServer).Get(ctx, req.(*DomainId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Domains_GetByFQDN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DomainFqdn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainsServer).GetByFQDN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Domains/GetByFQDN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainsServer).GetByFQDN(ctx, req.(*DomainFqdn))
	}
	return interceptor(ctx, in, info, handler)
}

var _Domains_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Domains",
	HandlerType: (*DomainsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Domains_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Domains_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Domains_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Domains_Get_Handler,
		},
		{
			MethodName: "GetByFQDN",
			Handler:    _Domains_GetByFQDN_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orders/orders.proto",
}

// FulfillmentsClient is the client API for Fulfillments service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FulfillmentsClient interface {
	Create(ctx context.Context, in *Fulfillment, opts ...grpc.CallOption) (*Fulfillment, error)
	Update(ctx context.Context, in *Fulfillment, opts ...grpc.CallOption) (*Fulfillment, error)
	Delete(ctx context.Context, in *FulfillmentId, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *FulfillmentId, opts ...grpc.CallOption) (*Fulfillment, error)
}

type fulfillmentsClient struct {
	cc *grpc.ClientConn
}

func NewFulfillmentsClient(cc *grpc.ClientConn) FulfillmentsClient {
	return &fulfillmentsClient{cc}
}

func (c *fulfillmentsClient) Create(ctx context.Context, in *Fulfillment, opts ...grpc.CallOption) (*Fulfillment, error) {
	out := new(Fulfillment)
	err := c.cc.Invoke(ctx, "/Fulfillments/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fulfillmentsClient) Update(ctx context.Context, in *Fulfillment, opts ...grpc.CallOption) (*Fulfillment, error) {
	out := new(Fulfillment)
	err := c.cc.Invoke(ctx, "/Fulfillments/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fulfillmentsClient) Delete(ctx context.Context, in *FulfillmentId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Fulfillments/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fulfillmentsClient) Get(ctx context.Context, in *FulfillmentId, opts ...grpc.CallOption) (*Fulfillment, error) {
	out := new(Fulfillment)
	err := c.cc.Invoke(ctx, "/Fulfillments/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FulfillmentsServer is the server API for Fulfillments service.
type FulfillmentsServer interface {
	Create(context.Context, *Fulfillment) (*Fulfillment, error)
	Update(context.Context, *Fulfillment) (*Fulfillment, error)
	Delete(context.Context, *FulfillmentId) (*empty.Empty, error)
	Get(context.Context, *FulfillmentId) (*Fulfillment, error)
}

// UnimplementedFulfillmentsServer can be embedded to have forward compatible implementations.
type UnimplementedFulfillmentsServer struct {
}

func (*UnimplementedFulfillmentsServer) Create(ctx context.Context, req *Fulfillment) (*Fulfillment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedFulfillmentsServer) Update(ctx context.Context, req *Fulfillment) (*Fulfillment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedFulfillmentsServer) Delete(ctx context.Context, req *FulfillmentId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedFulfillmentsServer) Get(ctx context.Context, req *FulfillmentId) (*Fulfillment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterFulfillmentsServer(s *grpc.Server, srv FulfillmentsServer) {
	s.RegisterService(&_Fulfillments_serviceDesc, srv)
}

func _Fulfillments_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Fulfillment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulfillmentsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Fulfillments/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulfillmentsServer).Create(ctx, req.(*Fulfillment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fulfillments_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Fulfillment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulfillmentsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Fulfillments/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulfillmentsServer).Update(ctx, req.(*Fulfillment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fulfillments_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FulfillmentId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulfillmentsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Fulfillments/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulfillmentsServer).Delete(ctx, req.(*FulfillmentId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fulfillments_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FulfillmentId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulfillmentsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Fulfillments/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulfillmentsServer).Get(ctx, req.(*FulfillmentId))
	}
	return interceptor(ctx, in, info, handler)
}

var _Fulfillments_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Fulfillments",
	HandlerType: (*FulfillmentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Fulfillments_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Fulfillments_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Fulfillments_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Fulfillments_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orders/orders.proto",
}

// TenantsClient is the client API for Tenants service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TenantsClient interface {
	Create(ctx context.Context, in *Tenant, opts ...grpc.CallOption) (*Tenant, error)
	Update(ctx context.Context, in *Tenant, opts ...grpc.CallOption) (*Tenant, error)
	Delete(ctx context.Context, in *TenantId, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *TenantId, opts ...grpc.CallOption) (*Tenant, error)
	GetByFQDN(ctx context.Context, in *DomainFqdn, opts ...grpc.CallOption) (*Tenant, error)
}

type tenantsClient struct {
	cc *grpc.ClientConn
}

func NewTenantsClient(cc *grpc.ClientConn) TenantsClient {
	return &tenantsClient{cc}
}

func (c *tenantsClient) Create(ctx context.Context, in *Tenant, opts ...grpc.CallOption) (*Tenant, error) {
	out := new(Tenant)
	err := c.cc.Invoke(ctx, "/Tenants/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantsClient) Update(ctx context.Context, in *Tenant, opts ...grpc.CallOption) (*Tenant, error) {
	out := new(Tenant)
	err := c.cc.Invoke(ctx, "/Tenants/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantsClient) Delete(ctx context.Context, in *TenantId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Tenants/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantsClient) Get(ctx context.Context, in *TenantId, opts ...grpc.CallOption) (*Tenant, error) {
	out := new(Tenant)
	err := c.cc.Invoke(ctx, "/Tenants/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantsClient) GetByFQDN(ctx context.Context, in *DomainFqdn, opts ...grpc.CallOption) (*Tenant, error) {
	out := new(Tenant)
	err := c.cc.Invoke(ctx, "/Tenants/GetByFQDN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TenantsServer is the server API for Tenants service.
type TenantsServer interface {
	Create(context.Context, *Tenant) (*Tenant, error)
	Update(context.Context, *Tenant) (*Tenant, error)
	Delete(context.Context, *TenantId) (*empty.Empty, error)
	Get(context.Context, *TenantId) (*Tenant, error)
	GetByFQDN(context.Context, *DomainFqdn) (*Tenant, error)
}

// UnimplementedTenantsServer can be embedded to have forward compatible implementations.
type UnimplementedTenantsServer struct {
}

func (*UnimplementedTenantsServer) Create(ctx context.Context, req *Tenant) (*Tenant, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTenantsServer) Update(ctx context.Context, req *Tenant) (*Tenant, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedTenantsServer) Delete(ctx context.Context, req *TenantId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedTenantsServer) Get(ctx context.Context, req *TenantId) (*Tenant, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedTenantsServer) GetByFQDN(ctx context.Context, req *DomainFqdn) (*Tenant, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByFQDN not implemented")
}

func RegisterTenantsServer(s *grpc.Server, srv TenantsServer) {
	s.RegisterService(&_Tenants_serviceDesc, srv)
}

func _Tenants_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tenant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Tenants/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServer).Create(ctx, req.(*Tenant))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tenants_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tenant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Tenants/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServer).Update(ctx, req.(*Tenant))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tenants_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TenantId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Tenants/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServer).Delete(ctx, req.(*TenantId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tenants_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TenantId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Tenants/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServer).Get(ctx, req.(*TenantId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tenants_GetByFQDN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DomainFqdn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServer).GetByFQDN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Tenants/GetByFQDN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServer).GetByFQDN(ctx, req.(*DomainFqdn))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tenants_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Tenants",
	HandlerType: (*TenantsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Tenants_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Tenants_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Tenants_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Tenants_Get_Handler,
		},
		{
			MethodName: "GetByFQDN",
			Handler:    _Tenants_GetByFQDN_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orders/orders.proto",
}
