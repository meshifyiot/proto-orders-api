// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: orders/orders_service.proto

package orders

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_orders_orders_service_proto protoreflect.FileDescriptor

var file_orders_orders_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x18, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xe7, 0x15, 0x0a, 0x0d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a,
	0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x53, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x2d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70,
	0x73, 0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x06, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x25, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x62, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x32, 0x2b, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x69, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x25,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x70, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x65, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x15, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x62, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x09, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x33, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0x6d, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x12, 0x16, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x22, 0x26, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x73, 0x3a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12,
	0x74, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x12, 0x16, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x32, 0x34, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x69,
	0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x75, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x2a,
	0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x70,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x7b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x66, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x15, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f,
	0x7b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x64, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x70, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x22,
	0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x22, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f,
	0x70, 0x73, 0x2f, 0x7b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x3a, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x77, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x32, 0x37, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x69,
	0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x77, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x2a,
	0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x70,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2f,
	0x7b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x45,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x73, 0x12, 0x11, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x68, 0x6f, 0x70, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70,
	0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x05, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x59, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70,
	0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x6f, 0x70, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x05, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x3a, 0x67, 0x65, 0x74, 0x42,
	0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d,
	0x12, 0x40, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x12,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x05, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x3a, 0x04, 0x73, 0x68,
	0x6f, 0x70, 0x12, 0x47, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70,
	0x12, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x05, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x32, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b,
	0x73, 0x68, 0x6f, 0x70, 0x2e, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x55, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x12, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x71, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x71, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x66,
	0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0c, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x39, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73,
	0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x7f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x46, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x22, 0x2c,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x66, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x0b, 0x66, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x19, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x46, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42,
	0x32, 0x3d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x69, 0x64, 0x7d, 0x3a,
	0x01, 0x2a, 0x12, 0x81, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x39, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x33, 0x2a, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x7b,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x6d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x1d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f,
	0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12,
	0x24, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x73, 0x3a, 0x67, 0x65, 0x74,
	0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x7b, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x42, 0xc9, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x66, 0x79, 0x69, 0x6f, 0x74, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x92, 0x41, 0x93, 0x01, 0x12, 0x6a,
	0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x41, 0x50, 0x49, 0x22, 0x56, 0x0a, 0x13, 0x63,
	0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2d, 0x74, 0x65,
	0x61, 0x6d, 0x12, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x66, 0x79, 0x69, 0x6f,
	0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2d, 0x61,
	0x70, 0x69, 0x1a, 0x0f, 0x64, 0x65, 0x76, 0x40, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x66, 0x79, 0x2e,
	0x63, 0x6f, 0x6d, 0x32, 0x05, 0x31, 0x2e, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_orders_orders_service_proto_goTypes = []interface{}{
	(*ListOrdersRequest)(nil),            // 0: ListOrdersRequest
	(*GetOrderRequest)(nil),              // 1: GetOrderRequest
	(*CreateOrderRequest)(nil),           // 2: CreateOrderRequest
	(*UpdateOrderRequest)(nil),           // 3: UpdateOrderRequest
	(*DeleteOrderRequest)(nil),           // 4: DeleteOrderRequest
	(*ListCustomersRequest)(nil),         // 5: ListCustomersRequest
	(*GetCustomerRequest)(nil),           // 6: GetCustomerRequest
	(*CreateCustomerRequest)(nil),        // 7: CreateCustomerRequest
	(*UpdateCustomerRequest)(nil),        // 8: UpdateCustomerRequest
	(*DeleteCustomerRequest)(nil),        // 9: DeleteCustomerRequest
	(*ListLineItemsRequest)(nil),         // 10: ListLineItemsRequest
	(*GetLineItemRequest)(nil),           // 11: GetLineItemRequest
	(*CreateLineItemRequest)(nil),        // 12: CreateLineItemRequest
	(*UpdateLineItemRequest)(nil),        // 13: UpdateLineItemRequest
	(*DeleteLineItemRequest)(nil),        // 14: DeleteLineItemRequest
	(*ListShopsRequest)(nil),             // 15: ListShopsRequest
	(*GetShopRequest)(nil),               // 16: GetShopRequest
	(*GetShopByDomainRequest)(nil),       // 17: GetShopByDomainRequest
	(*CreateShopRequest)(nil),            // 18: CreateShopRequest
	(*UpdateShopRequest)(nil),            // 19: UpdateShopRequest
	(*DeleteShopRequest)(nil),            // 20: DeleteShopRequest
	(*ListFulfillmentsRequest)(nil),      // 21: ListFulfillmentsRequest
	(*GetFulfillmentRequest)(nil),        // 22: GetFulfillmentRequest
	(*CreateFulfillmentRequest)(nil),     // 23: CreateFulfillmentRequest
	(*UpdateFulfillmentRequest)(nil),     // 24: UpdateFulfillmentRequest
	(*DeleteFulfillmentRequest)(nil),     // 25: DeleteFulfillmentRequest
	(*GetTenantByShopDomainRequest)(nil), // 26: GetTenantByShopDomainRequest
	(*ListOrdersResponse)(nil),           // 27: ListOrdersResponse
	(*Order)(nil),                        // 28: Order
	(*empty.Empty)(nil),                  // 29: google.protobuf.Empty
	(*ListCustomersResponse)(nil),        // 30: ListCustomersResponse
	(*Customer)(nil),                     // 31: Customer
	(*ListLineItemsResponse)(nil),        // 32: ListLineItemsResponse
	(*LineItem)(nil),                     // 33: LineItem
	(*ListShopsResponse)(nil),            // 34: ListShopsResponse
	(*Shop)(nil),                         // 35: Shop
	(*ListFulfillmentsResponse)(nil),     // 36: ListFulfillmentsResponse
	(*Fulfillment)(nil),                  // 37: Fulfillment
	(*Tenant)(nil),                       // 38: Tenant
}
var file_orders_orders_service_proto_depIdxs = []int32{
	0,  // 0: OrdersService.ListOrders:input_type -> ListOrdersRequest
	1,  // 1: OrdersService.GetOrder:input_type -> GetOrderRequest
	2,  // 2: OrdersService.CreateOrder:input_type -> CreateOrderRequest
	3,  // 3: OrdersService.UpdateOrder:input_type -> UpdateOrderRequest
	4,  // 4: OrdersService.DeleteOrder:input_type -> DeleteOrderRequest
	5,  // 5: OrdersService.ListCustomers:input_type -> ListCustomersRequest
	6,  // 6: OrdersService.GetCustomer:input_type -> GetCustomerRequest
	7,  // 7: OrdersService.CreateCustomer:input_type -> CreateCustomerRequest
	8,  // 8: OrdersService.UpdateCustomer:input_type -> UpdateCustomerRequest
	9,  // 9: OrdersService.DeleteCustomer:input_type -> DeleteCustomerRequest
	10, // 10: OrdersService.ListLineItems:input_type -> ListLineItemsRequest
	11, // 11: OrdersService.GetLineItem:input_type -> GetLineItemRequest
	12, // 12: OrdersService.CreateLineItem:input_type -> CreateLineItemRequest
	13, // 13: OrdersService.UpdateLineItem:input_type -> UpdateLineItemRequest
	14, // 14: OrdersService.DeleteLineItem:input_type -> DeleteLineItemRequest
	15, // 15: OrdersService.ListShops:input_type -> ListShopsRequest
	16, // 16: OrdersService.GetShop:input_type -> GetShopRequest
	17, // 17: OrdersService.GetShopByDomain:input_type -> GetShopByDomainRequest
	18, // 18: OrdersService.CreateShop:input_type -> CreateShopRequest
	19, // 19: OrdersService.UpdateShop:input_type -> UpdateShopRequest
	20, // 20: OrdersService.DeleteShop:input_type -> DeleteShopRequest
	21, // 21: OrdersService.ListFulfillments:input_type -> ListFulfillmentsRequest
	22, // 22: OrdersService.GetFulfillment:input_type -> GetFulfillmentRequest
	23, // 23: OrdersService.CreateFulfillment:input_type -> CreateFulfillmentRequest
	24, // 24: OrdersService.UpdateFulfillment:input_type -> UpdateFulfillmentRequest
	25, // 25: OrdersService.DeleteFulfillment:input_type -> DeleteFulfillmentRequest
	26, // 26: OrdersService.GetTenantByShopDomain:input_type -> GetTenantByShopDomainRequest
	27, // 27: OrdersService.ListOrders:output_type -> ListOrdersResponse
	28, // 28: OrdersService.GetOrder:output_type -> Order
	28, // 29: OrdersService.CreateOrder:output_type -> Order
	28, // 30: OrdersService.UpdateOrder:output_type -> Order
	29, // 31: OrdersService.DeleteOrder:output_type -> google.protobuf.Empty
	30, // 32: OrdersService.ListCustomers:output_type -> ListCustomersResponse
	31, // 33: OrdersService.GetCustomer:output_type -> Customer
	31, // 34: OrdersService.CreateCustomer:output_type -> Customer
	31, // 35: OrdersService.UpdateCustomer:output_type -> Customer
	29, // 36: OrdersService.DeleteCustomer:output_type -> google.protobuf.Empty
	32, // 37: OrdersService.ListLineItems:output_type -> ListLineItemsResponse
	33, // 38: OrdersService.GetLineItem:output_type -> LineItem
	33, // 39: OrdersService.CreateLineItem:output_type -> LineItem
	33, // 40: OrdersService.UpdateLineItem:output_type -> LineItem
	29, // 41: OrdersService.DeleteLineItem:output_type -> google.protobuf.Empty
	34, // 42: OrdersService.ListShops:output_type -> ListShopsResponse
	35, // 43: OrdersService.GetShop:output_type -> Shop
	35, // 44: OrdersService.GetShopByDomain:output_type -> Shop
	35, // 45: OrdersService.CreateShop:output_type -> Shop
	35, // 46: OrdersService.UpdateShop:output_type -> Shop
	29, // 47: OrdersService.DeleteShop:output_type -> google.protobuf.Empty
	36, // 48: OrdersService.ListFulfillments:output_type -> ListFulfillmentsResponse
	37, // 49: OrdersService.GetFulfillment:output_type -> Fulfillment
	37, // 50: OrdersService.CreateFulfillment:output_type -> Fulfillment
	37, // 51: OrdersService.UpdateFulfillment:output_type -> Fulfillment
	29, // 52: OrdersService.DeleteFulfillment:output_type -> google.protobuf.Empty
	38, // 53: OrdersService.GetTenantByShopDomain:output_type -> Tenant
	27, // [27:54] is the sub-list for method output_type
	0,  // [0:27] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_orders_orders_service_proto_init() }
func file_orders_orders_service_proto_init() {
	if File_orders_orders_service_proto != nil {
		return
	}
	file_orders_tenant_proto_init()
	file_orders_shop_proto_init()
	file_orders_line_item_proto_init()
	file_orders_customer_proto_init()
	file_orders_order_proto_init()
	file_orders_fulfillment_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orders_orders_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orders_orders_service_proto_goTypes,
		DependencyIndexes: file_orders_orders_service_proto_depIdxs,
	}.Build()
	File_orders_orders_service_proto = out.File
	file_orders_orders_service_proto_rawDesc = nil
	file_orders_orders_service_proto_goTypes = nil
	file_orders_orders_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrdersServiceClient is the client API for OrdersService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrdersServiceClient interface {
	// ListOrders returns paginated list of orders.
	ListOrders(ctx context.Context, in *ListOrdersRequest, opts ...grpc.CallOption) (*ListOrdersResponse, error)
	// GetOrder returns an order.
	GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*Order, error)
	// CreateOrder creates an order.
	CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*Order, error)
	// UpdateOrder updates an order.
	UpdateOrder(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*Order, error)
	// DeleteOrder deletes an order.
	DeleteOrder(ctx context.Context, in *DeleteOrderRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ListCustomers(ctx context.Context, in *ListCustomersRequest, opts ...grpc.CallOption) (*ListCustomersResponse, error)
	GetCustomer(ctx context.Context, in *GetCustomerRequest, opts ...grpc.CallOption) (*Customer, error)
	CreateCustomer(ctx context.Context, in *CreateCustomerRequest, opts ...grpc.CallOption) (*Customer, error)
	UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, opts ...grpc.CallOption) (*Customer, error)
	DeleteCustomer(ctx context.Context, in *DeleteCustomerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ListLineItems(ctx context.Context, in *ListLineItemsRequest, opts ...grpc.CallOption) (*ListLineItemsResponse, error)
	GetLineItem(ctx context.Context, in *GetLineItemRequest, opts ...grpc.CallOption) (*LineItem, error)
	CreateLineItem(ctx context.Context, in *CreateLineItemRequest, opts ...grpc.CallOption) (*LineItem, error)
	UpdateLineItem(ctx context.Context, in *UpdateLineItemRequest, opts ...grpc.CallOption) (*LineItem, error)
	DeleteLineItem(ctx context.Context, in *DeleteLineItemRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// ListShops returns paginated list of shops.
	ListShops(ctx context.Context, in *ListShopsRequest, opts ...grpc.CallOption) (*ListShopsResponse, error)
	// GetShop returns a shop.
	GetShop(ctx context.Context, in *GetShopRequest, opts ...grpc.CallOption) (*Shop, error)
	// GetShopByDomain returns a shop by domain.
	GetShopByDomain(ctx context.Context, in *GetShopByDomainRequest, opts ...grpc.CallOption) (*Shop, error)
	// CreateShop creates a shop.
	CreateShop(ctx context.Context, in *CreateShopRequest, opts ...grpc.CallOption) (*Shop, error)
	// UpdateShop updates a shop.
	UpdateShop(ctx context.Context, in *UpdateShopRequest, opts ...grpc.CallOption) (*Shop, error)
	// DeleteShop deletes a shop.
	DeleteShop(ctx context.Context, in *DeleteShopRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// ListFulfillments returns paginated list of fulfillments.
	ListFulfillments(ctx context.Context, in *ListFulfillmentsRequest, opts ...grpc.CallOption) (*ListFulfillmentsResponse, error)
	// GetFulfillment returns a fulfillment.
	GetFulfillment(ctx context.Context, in *GetFulfillmentRequest, opts ...grpc.CallOption) (*Fulfillment, error)
	// CreateFulfillment creates a fulfillment.
	CreateFulfillment(ctx context.Context, in *CreateFulfillmentRequest, opts ...grpc.CallOption) (*Fulfillment, error)
	// UpdateFulfillment updates a fulfillment.
	UpdateFulfillment(ctx context.Context, in *UpdateFulfillmentRequest, opts ...grpc.CallOption) (*Fulfillment, error)
	// DeleteFulfillment deletes a fulfillment.
	DeleteFulfillment(ctx context.Context, in *DeleteFulfillmentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetTenantByShopDomain returns a tenant by Shopify Store domain.
	GetTenantByShopDomain(ctx context.Context, in *GetTenantByShopDomainRequest, opts ...grpc.CallOption) (*Tenant, error)
}

type ordersServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrdersServiceClient(cc grpc.ClientConnInterface) OrdersServiceClient {
	return &ordersServiceClient{cc}
}

func (c *ordersServiceClient) ListOrders(ctx context.Context, in *ListOrdersRequest, opts ...grpc.CallOption) (*ListOrdersResponse, error) {
	out := new(ListOrdersResponse)
	err := c.cc.Invoke(ctx, "/OrdersService/ListOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/OrdersService/GetOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/OrdersService/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) UpdateOrder(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/OrdersService/UpdateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) DeleteOrder(ctx context.Context, in *DeleteOrderRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/OrdersService/DeleteOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) ListCustomers(ctx context.Context, in *ListCustomersRequest, opts ...grpc.CallOption) (*ListCustomersResponse, error) {
	out := new(ListCustomersResponse)
	err := c.cc.Invoke(ctx, "/OrdersService/ListCustomers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) GetCustomer(ctx context.Context, in *GetCustomerRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/OrdersService/GetCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) CreateCustomer(ctx context.Context, in *CreateCustomerRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/OrdersService/CreateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/OrdersService/UpdateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) DeleteCustomer(ctx context.Context, in *DeleteCustomerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/OrdersService/DeleteCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) ListLineItems(ctx context.Context, in *ListLineItemsRequest, opts ...grpc.CallOption) (*ListLineItemsResponse, error) {
	out := new(ListLineItemsResponse)
	err := c.cc.Invoke(ctx, "/OrdersService/ListLineItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) GetLineItem(ctx context.Context, in *GetLineItemRequest, opts ...grpc.CallOption) (*LineItem, error) {
	out := new(LineItem)
	err := c.cc.Invoke(ctx, "/OrdersService/GetLineItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) CreateLineItem(ctx context.Context, in *CreateLineItemRequest, opts ...grpc.CallOption) (*LineItem, error) {
	out := new(LineItem)
	err := c.cc.Invoke(ctx, "/OrdersService/CreateLineItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) UpdateLineItem(ctx context.Context, in *UpdateLineItemRequest, opts ...grpc.CallOption) (*LineItem, error) {
	out := new(LineItem)
	err := c.cc.Invoke(ctx, "/OrdersService/UpdateLineItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) DeleteLineItem(ctx context.Context, in *DeleteLineItemRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/OrdersService/DeleteLineItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) ListShops(ctx context.Context, in *ListShopsRequest, opts ...grpc.CallOption) (*ListShopsResponse, error) {
	out := new(ListShopsResponse)
	err := c.cc.Invoke(ctx, "/OrdersService/ListShops", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) GetShop(ctx context.Context, in *GetShopRequest, opts ...grpc.CallOption) (*Shop, error) {
	out := new(Shop)
	err := c.cc.Invoke(ctx, "/OrdersService/GetShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) GetShopByDomain(ctx context.Context, in *GetShopByDomainRequest, opts ...grpc.CallOption) (*Shop, error) {
	out := new(Shop)
	err := c.cc.Invoke(ctx, "/OrdersService/GetShopByDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) CreateShop(ctx context.Context, in *CreateShopRequest, opts ...grpc.CallOption) (*Shop, error) {
	out := new(Shop)
	err := c.cc.Invoke(ctx, "/OrdersService/CreateShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) UpdateShop(ctx context.Context, in *UpdateShopRequest, opts ...grpc.CallOption) (*Shop, error) {
	out := new(Shop)
	err := c.cc.Invoke(ctx, "/OrdersService/UpdateShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) DeleteShop(ctx context.Context, in *DeleteShopRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/OrdersService/DeleteShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) ListFulfillments(ctx context.Context, in *ListFulfillmentsRequest, opts ...grpc.CallOption) (*ListFulfillmentsResponse, error) {
	out := new(ListFulfillmentsResponse)
	err := c.cc.Invoke(ctx, "/OrdersService/ListFulfillments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) GetFulfillment(ctx context.Context, in *GetFulfillmentRequest, opts ...grpc.CallOption) (*Fulfillment, error) {
	out := new(Fulfillment)
	err := c.cc.Invoke(ctx, "/OrdersService/GetFulfillment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) CreateFulfillment(ctx context.Context, in *CreateFulfillmentRequest, opts ...grpc.CallOption) (*Fulfillment, error) {
	out := new(Fulfillment)
	err := c.cc.Invoke(ctx, "/OrdersService/CreateFulfillment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) UpdateFulfillment(ctx context.Context, in *UpdateFulfillmentRequest, opts ...grpc.CallOption) (*Fulfillment, error) {
	out := new(Fulfillment)
	err := c.cc.Invoke(ctx, "/OrdersService/UpdateFulfillment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) DeleteFulfillment(ctx context.Context, in *DeleteFulfillmentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/OrdersService/DeleteFulfillment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersServiceClient) GetTenantByShopDomain(ctx context.Context, in *GetTenantByShopDomainRequest, opts ...grpc.CallOption) (*Tenant, error) {
	out := new(Tenant)
	err := c.cc.Invoke(ctx, "/OrdersService/GetTenantByShopDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrdersServiceServer is the server API for OrdersService service.
type OrdersServiceServer interface {
	// ListOrders returns paginated list of orders.
	ListOrders(context.Context, *ListOrdersRequest) (*ListOrdersResponse, error)
	// GetOrder returns an order.
	GetOrder(context.Context, *GetOrderRequest) (*Order, error)
	// CreateOrder creates an order.
	CreateOrder(context.Context, *CreateOrderRequest) (*Order, error)
	// UpdateOrder updates an order.
	UpdateOrder(context.Context, *UpdateOrderRequest) (*Order, error)
	// DeleteOrder deletes an order.
	DeleteOrder(context.Context, *DeleteOrderRequest) (*empty.Empty, error)
	ListCustomers(context.Context, *ListCustomersRequest) (*ListCustomersResponse, error)
	GetCustomer(context.Context, *GetCustomerRequest) (*Customer, error)
	CreateCustomer(context.Context, *CreateCustomerRequest) (*Customer, error)
	UpdateCustomer(context.Context, *UpdateCustomerRequest) (*Customer, error)
	DeleteCustomer(context.Context, *DeleteCustomerRequest) (*empty.Empty, error)
	ListLineItems(context.Context, *ListLineItemsRequest) (*ListLineItemsResponse, error)
	GetLineItem(context.Context, *GetLineItemRequest) (*LineItem, error)
	CreateLineItem(context.Context, *CreateLineItemRequest) (*LineItem, error)
	UpdateLineItem(context.Context, *UpdateLineItemRequest) (*LineItem, error)
	DeleteLineItem(context.Context, *DeleteLineItemRequest) (*empty.Empty, error)
	// ListShops returns paginated list of shops.
	ListShops(context.Context, *ListShopsRequest) (*ListShopsResponse, error)
	// GetShop returns a shop.
	GetShop(context.Context, *GetShopRequest) (*Shop, error)
	// GetShopByDomain returns a shop by domain.
	GetShopByDomain(context.Context, *GetShopByDomainRequest) (*Shop, error)
	// CreateShop creates a shop.
	CreateShop(context.Context, *CreateShopRequest) (*Shop, error)
	// UpdateShop updates a shop.
	UpdateShop(context.Context, *UpdateShopRequest) (*Shop, error)
	// DeleteShop deletes a shop.
	DeleteShop(context.Context, *DeleteShopRequest) (*empty.Empty, error)
	// ListFulfillments returns paginated list of fulfillments.
	ListFulfillments(context.Context, *ListFulfillmentsRequest) (*ListFulfillmentsResponse, error)
	// GetFulfillment returns a fulfillment.
	GetFulfillment(context.Context, *GetFulfillmentRequest) (*Fulfillment, error)
	// CreateFulfillment creates a fulfillment.
	CreateFulfillment(context.Context, *CreateFulfillmentRequest) (*Fulfillment, error)
	// UpdateFulfillment updates a fulfillment.
	UpdateFulfillment(context.Context, *UpdateFulfillmentRequest) (*Fulfillment, error)
	// DeleteFulfillment deletes a fulfillment.
	DeleteFulfillment(context.Context, *DeleteFulfillmentRequest) (*empty.Empty, error)
	// GetTenantByShopDomain returns a tenant by Shopify Store domain.
	GetTenantByShopDomain(context.Context, *GetTenantByShopDomainRequest) (*Tenant, error)
}

// UnimplementedOrdersServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrdersServiceServer struct {
}

func (*UnimplementedOrdersServiceServer) ListOrders(context.Context, *ListOrdersRequest) (*ListOrdersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOrders not implemented")
}
func (*UnimplementedOrdersServiceServer) GetOrder(context.Context, *GetOrderRequest) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrder not implemented")
}
func (*UnimplementedOrdersServiceServer) CreateOrder(context.Context, *CreateOrderRequest) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrder not implemented")
}
func (*UnimplementedOrdersServiceServer) UpdateOrder(context.Context, *UpdateOrderRequest) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrder not implemented")
}
func (*UnimplementedOrdersServiceServer) DeleteOrder(context.Context, *DeleteOrderRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOrder not implemented")
}
func (*UnimplementedOrdersServiceServer) ListCustomers(context.Context, *ListCustomersRequest) (*ListCustomersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCustomers not implemented")
}
func (*UnimplementedOrdersServiceServer) GetCustomer(context.Context, *GetCustomerRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomer not implemented")
}
func (*UnimplementedOrdersServiceServer) CreateCustomer(context.Context, *CreateCustomerRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomer not implemented")
}
func (*UnimplementedOrdersServiceServer) UpdateCustomer(context.Context, *UpdateCustomerRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomer not implemented")
}
func (*UnimplementedOrdersServiceServer) DeleteCustomer(context.Context, *DeleteCustomerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCustomer not implemented")
}
func (*UnimplementedOrdersServiceServer) ListLineItems(context.Context, *ListLineItemsRequest) (*ListLineItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLineItems not implemented")
}
func (*UnimplementedOrdersServiceServer) GetLineItem(context.Context, *GetLineItemRequest) (*LineItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLineItem not implemented")
}
func (*UnimplementedOrdersServiceServer) CreateLineItem(context.Context, *CreateLineItemRequest) (*LineItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLineItem not implemented")
}
func (*UnimplementedOrdersServiceServer) UpdateLineItem(context.Context, *UpdateLineItemRequest) (*LineItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLineItem not implemented")
}
func (*UnimplementedOrdersServiceServer) DeleteLineItem(context.Context, *DeleteLineItemRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLineItem not implemented")
}
func (*UnimplementedOrdersServiceServer) ListShops(context.Context, *ListShopsRequest) (*ListShopsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListShops not implemented")
}
func (*UnimplementedOrdersServiceServer) GetShop(context.Context, *GetShopRequest) (*Shop, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShop not implemented")
}
func (*UnimplementedOrdersServiceServer) GetShopByDomain(context.Context, *GetShopByDomainRequest) (*Shop, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShopByDomain not implemented")
}
func (*UnimplementedOrdersServiceServer) CreateShop(context.Context, *CreateShopRequest) (*Shop, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateShop not implemented")
}
func (*UnimplementedOrdersServiceServer) UpdateShop(context.Context, *UpdateShopRequest) (*Shop, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateShop not implemented")
}
func (*UnimplementedOrdersServiceServer) DeleteShop(context.Context, *DeleteShopRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteShop not implemented")
}
func (*UnimplementedOrdersServiceServer) ListFulfillments(context.Context, *ListFulfillmentsRequest) (*ListFulfillmentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFulfillments not implemented")
}
func (*UnimplementedOrdersServiceServer) GetFulfillment(context.Context, *GetFulfillmentRequest) (*Fulfillment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFulfillment not implemented")
}
func (*UnimplementedOrdersServiceServer) CreateFulfillment(context.Context, *CreateFulfillmentRequest) (*Fulfillment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFulfillment not implemented")
}
func (*UnimplementedOrdersServiceServer) UpdateFulfillment(context.Context, *UpdateFulfillmentRequest) (*Fulfillment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFulfillment not implemented")
}
func (*UnimplementedOrdersServiceServer) DeleteFulfillment(context.Context, *DeleteFulfillmentRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFulfillment not implemented")
}
func (*UnimplementedOrdersServiceServer) GetTenantByShopDomain(context.Context, *GetTenantByShopDomainRequest) (*Tenant, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTenantByShopDomain not implemented")
}

func RegisterOrdersServiceServer(s *grpc.Server, srv OrdersServiceServer) {
	s.RegisterService(&_OrdersService_serviceDesc, srv)
}

func _OrdersService_ListOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).ListOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/ListOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).ListOrders(ctx, req.(*ListOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/GetOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetOrder(ctx, req.(*GetOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).CreateOrder(ctx, req.(*CreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_UpdateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).UpdateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/UpdateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).UpdateOrder(ctx, req.(*UpdateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_DeleteOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).DeleteOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/DeleteOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).DeleteOrder(ctx, req.(*DeleteOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_ListCustomers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCustomersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).ListCustomers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/ListCustomers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).ListCustomers(ctx, req.(*ListCustomersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_GetCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/GetCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetCustomer(ctx, req.(*GetCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).CreateCustomer(ctx, req.(*CreateCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_UpdateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).UpdateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/UpdateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).UpdateCustomer(ctx, req.(*UpdateCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_DeleteCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).DeleteCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/DeleteCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).DeleteCustomer(ctx, req.(*DeleteCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_ListLineItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLineItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).ListLineItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/ListLineItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).ListLineItems(ctx, req.(*ListLineItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_GetLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLineItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/GetLineItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetLineItem(ctx, req.(*GetLineItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_CreateLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLineItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).CreateLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/CreateLineItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).CreateLineItem(ctx, req.(*CreateLineItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_UpdateLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLineItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).UpdateLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/UpdateLineItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).UpdateLineItem(ctx, req.(*UpdateLineItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_DeleteLineItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLineItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).DeleteLineItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/DeleteLineItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).DeleteLineItem(ctx, req.(*DeleteLineItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_ListShops_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListShopsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).ListShops(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/ListShops",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).ListShops(ctx, req.(*ListShopsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_GetShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/GetShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetShop(ctx, req.(*GetShopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_GetShopByDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShopByDomainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetShopByDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/GetShopByDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetShopByDomain(ctx, req.(*GetShopByDomainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_CreateShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateShopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).CreateShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/CreateShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).CreateShop(ctx, req.(*CreateShopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_UpdateShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateShopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).UpdateShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/UpdateShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).UpdateShop(ctx, req.(*UpdateShopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_DeleteShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteShopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).DeleteShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/DeleteShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).DeleteShop(ctx, req.(*DeleteShopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_ListFulfillments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFulfillmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).ListFulfillments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/ListFulfillments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).ListFulfillments(ctx, req.(*ListFulfillmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_GetFulfillment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFulfillmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetFulfillment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/GetFulfillment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetFulfillment(ctx, req.(*GetFulfillmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_CreateFulfillment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFulfillmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).CreateFulfillment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/CreateFulfillment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).CreateFulfillment(ctx, req.(*CreateFulfillmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_UpdateFulfillment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFulfillmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).UpdateFulfillment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/UpdateFulfillment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).UpdateFulfillment(ctx, req.(*UpdateFulfillmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_DeleteFulfillment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFulfillmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).DeleteFulfillment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/DeleteFulfillment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).DeleteFulfillment(ctx, req.(*DeleteFulfillmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrdersService_GetTenantByShopDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTenantByShopDomainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServiceServer).GetTenantByShopDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OrdersService/GetTenantByShopDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServiceServer).GetTenantByShopDomain(ctx, req.(*GetTenantByShopDomainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrdersService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OrdersService",
	HandlerType: (*OrdersServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListOrders",
			Handler:    _OrdersService_ListOrders_Handler,
		},
		{
			MethodName: "GetOrder",
			Handler:    _OrdersService_GetOrder_Handler,
		},
		{
			MethodName: "CreateOrder",
			Handler:    _OrdersService_CreateOrder_Handler,
		},
		{
			MethodName: "UpdateOrder",
			Handler:    _OrdersService_UpdateOrder_Handler,
		},
		{
			MethodName: "DeleteOrder",
			Handler:    _OrdersService_DeleteOrder_Handler,
		},
		{
			MethodName: "ListCustomers",
			Handler:    _OrdersService_ListCustomers_Handler,
		},
		{
			MethodName: "GetCustomer",
			Handler:    _OrdersService_GetCustomer_Handler,
		},
		{
			MethodName: "CreateCustomer",
			Handler:    _OrdersService_CreateCustomer_Handler,
		},
		{
			MethodName: "UpdateCustomer",
			Handler:    _OrdersService_UpdateCustomer_Handler,
		},
		{
			MethodName: "DeleteCustomer",
			Handler:    _OrdersService_DeleteCustomer_Handler,
		},
		{
			MethodName: "ListLineItems",
			Handler:    _OrdersService_ListLineItems_Handler,
		},
		{
			MethodName: "GetLineItem",
			Handler:    _OrdersService_GetLineItem_Handler,
		},
		{
			MethodName: "CreateLineItem",
			Handler:    _OrdersService_CreateLineItem_Handler,
		},
		{
			MethodName: "UpdateLineItem",
			Handler:    _OrdersService_UpdateLineItem_Handler,
		},
		{
			MethodName: "DeleteLineItem",
			Handler:    _OrdersService_DeleteLineItem_Handler,
		},
		{
			MethodName: "ListShops",
			Handler:    _OrdersService_ListShops_Handler,
		},
		{
			MethodName: "GetShop",
			Handler:    _OrdersService_GetShop_Handler,
		},
		{
			MethodName: "GetShopByDomain",
			Handler:    _OrdersService_GetShopByDomain_Handler,
		},
		{
			MethodName: "CreateShop",
			Handler:    _OrdersService_CreateShop_Handler,
		},
		{
			MethodName: "UpdateShop",
			Handler:    _OrdersService_UpdateShop_Handler,
		},
		{
			MethodName: "DeleteShop",
			Handler:    _OrdersService_DeleteShop_Handler,
		},
		{
			MethodName: "ListFulfillments",
			Handler:    _OrdersService_ListFulfillments_Handler,
		},
		{
			MethodName: "GetFulfillment",
			Handler:    _OrdersService_GetFulfillment_Handler,
		},
		{
			MethodName: "CreateFulfillment",
			Handler:    _OrdersService_CreateFulfillment_Handler,
		},
		{
			MethodName: "UpdateFulfillment",
			Handler:    _OrdersService_UpdateFulfillment_Handler,
		},
		{
			MethodName: "DeleteFulfillment",
			Handler:    _OrdersService_DeleteFulfillment_Handler,
		},
		{
			MethodName: "GetTenantByShopDomain",
			Handler:    _OrdersService_GetTenantByShopDomain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orders/orders_service.proto",
}
