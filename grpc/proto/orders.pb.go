// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/orders.proto

package orders

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderId struct {
	DomainId             int64    `protobuf:"varint,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderId) Reset()         { *m = OrderId{} }
func (m *OrderId) String() string { return proto.CompactTextString(m) }
func (*OrderId) ProtoMessage()    {}
func (*OrderId) Descriptor() ([]byte, []int) {
	return fileDescriptor_2db5eaa0f165ca68, []int{0}
}

func (m *OrderId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderId.Unmarshal(m, b)
}
func (m *OrderId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderId.Marshal(b, m, deterministic)
}
func (m *OrderId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderId.Merge(m, src)
}
func (m *OrderId) XXX_Size() int {
	return xxx_messageInfo_OrderId.Size(m)
}
func (m *OrderId) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderId.DiscardUnknown(m)
}

var xxx_messageInfo_OrderId proto.InternalMessageInfo

func (m *OrderId) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *OrderId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Order struct {
	DomainId int64 `protobuf:"varint,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Id       int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Customer facing order ID
	OrderNumber          int64                `protobuf:"varint,3,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ProcessedAt          *timestamp.Timestamp `protobuf:"bytes,11,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ClosedAt             *timestamp.Timestamp `protobuf:"bytes,13,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	CancelledAt          *timestamp.Timestamp `protobuf:"bytes,14,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
	Email                string               `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Number               int64                `protobuf:"varint,6,opt,name=number,proto3" json:"number,omitempty"`
	Note                 string               `protobuf:"bytes,7,opt,name=note,proto3" json:"note,omitempty"`
	Token                string               `protobuf:"bytes,8,opt,name=token,proto3" json:"token,omitempty"`
	Name                 string               `protobuf:"bytes,23,opt,name=name,proto3" json:"name,omitempty"`
	CancelReason         string               `protobuf:"bytes,27,opt,name=cancel_reason,json=cancelReason,proto3" json:"cancel_reason,omitempty"`
	UserId               int64                `protobuf:"varint,31,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AppId                int64                `protobuf:"varint,39,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ProcessingMethod     string               `protobuf:"bytes,47,opt,name=processing_method,json=processingMethod,proto3" json:"processing_method,omitempty"`
	SourceName           string               `protobuf:"bytes,49,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	ContactEmail         string               `protobuf:"bytes,53,opt,name=contact_email,json=contactEmail,proto3" json:"contact_email,omitempty"`
	OrderStatusUrl       string               `protobuf:"bytes,54,opt,name=order_status_url,json=orderStatusUrl,proto3" json:"order_status_url,omitempty"`
	CustomerId           int64                `protobuf:"varint,68,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	BillingAddress       *Address             `protobuf:"bytes,64,opt,name=billing_address,json=billingAddress,proto3" json:"billing_address,omitempty"`
	ShippingAddress      *Address             `protobuf:"bytes,65,opt,name=shipping_address,json=shippingAddress,proto3" json:"shipping_address,omitempty"`
	LineItemIds          []int64              `protobuf:"varint,66,rep,packed,name=line_item_ids,json=lineItemIds,proto3" json:"line_item_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_2db5eaa0f165ca68, []int{1}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *Order) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Order) GetOrderNumber() int64 {
	if m != nil {
		return m.OrderNumber
	}
	return 0
}

func (m *Order) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Order) GetProcessedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ProcessedAt
	}
	return nil
}

func (m *Order) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Order) GetClosedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ClosedAt
	}
	return nil
}

func (m *Order) GetCancelledAt() *timestamp.Timestamp {
	if m != nil {
		return m.CancelledAt
	}
	return nil
}

func (m *Order) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Order) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Order) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Order) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Order) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Order) GetCancelReason() string {
	if m != nil {
		return m.CancelReason
	}
	return ""
}

func (m *Order) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Order) GetAppId() int64 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *Order) GetProcessingMethod() string {
	if m != nil {
		return m.ProcessingMethod
	}
	return ""
}

func (m *Order) GetSourceName() string {
	if m != nil {
		return m.SourceName
	}
	return ""
}

func (m *Order) GetContactEmail() string {
	if m != nil {
		return m.ContactEmail
	}
	return ""
}

func (m *Order) GetOrderStatusUrl() string {
	if m != nil {
		return m.OrderStatusUrl
	}
	return ""
}

func (m *Order) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *Order) GetBillingAddress() *Address {
	if m != nil {
		return m.BillingAddress
	}
	return nil
}

func (m *Order) GetShippingAddress() *Address {
	if m != nil {
		return m.ShippingAddress
	}
	return nil
}

func (m *Order) GetLineItemIds() []int64 {
	if m != nil {
		return m.LineItemIds
	}
	return nil
}

func init() {
	proto.RegisterType((*OrderId)(nil), "OrderId")
	proto.RegisterType((*Order)(nil), "Order")
}

func init() { proto.RegisterFile("proto/orders.proto", fileDescriptor_2db5eaa0f165ca68) }

var fileDescriptor_2db5eaa0f165ca68 = []byte{
	// 721 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x41, 0x8f, 0xe3, 0x34,
	0x14, 0x56, 0x5a, 0x9a, 0xb6, 0xee, 0x4c, 0xa7, 0x18, 0x76, 0x27, 0xea, 0x1c, 0xa6, 0x94, 0x03,
	0xd5, 0x42, 0x13, 0xa6, 0x2b, 0x16, 0xb1, 0x12, 0xd2, 0x66, 0xd9, 0x15, 0xca, 0x81, 0x05, 0x15,
	0x96, 0x03, 0x97, 0xc8, 0x8d, 0xdf, 0xb6, 0x66, 0x12, 0xdb, 0x8a, 0x1d, 0xd0, 0x1c, 0xf9, 0x05,
	0x08, 0xee, 0xfc, 0x57, 0x94, 0x67, 0x67, 0x18, 0xcd, 0x1c, 0x2a, 0x4e, 0xc9, 0xfb, 0xde, 0xf7,
	0xde, 0xfb, 0xf2, 0xc5, 0x7e, 0x84, 0xea, 0x5a, 0x59, 0x95, 0xa8, 0x9a, 0x43, 0x6d, 0x62, 0x0c,
	0xe6, 0x97, 0x7b, 0xa5, 0xf6, 0x25, 0x24, 0x18, 0xed, 0x9a, 0x77, 0x89, 0x15, 0x15, 0x18, 0xcb,
	0x2a, 0xed, 0x09, 0x17, 0xf7, 0x09, 0x50, 0x69, 0x7b, 0xe3, 0x93, 0x8f, 0x5c, 0x47, 0xc6, 0x79,
	0x0d, 0xc6, 0x40, 0xd7, 0xf4, 0x33, 0x7c, 0x14, 0xeb, 0x3d, 0xc8, 0xb5, 0xf9, 0x9d, 0xed, 0xf7,
	0x50, 0x27, 0x4a, 0x5b, 0xa1, 0xa4, 0x49, 0x98, 0x94, 0xca, 0x32, 0x7c, 0x77, 0xec, 0xe5, 0x33,
	0x32, 0xfc, 0xbe, 0x95, 0x94, 0x71, 0x7a, 0x41, 0xc6, 0x5c, 0x55, 0x4c, 0xc8, 0x5c, 0xf0, 0x28,
	0x58, 0x04, 0xab, 0xfe, 0x76, 0xe4, 0x80, 0x8c, 0xd3, 0x29, 0xe9, 0x09, 0x1e, 0xf5, 0x10, 0xed,
	0x09, 0xbe, 0xfc, 0x73, 0x48, 0x06, 0x58, 0xf8, 0xbf, 0xca, 0xe8, 0x47, 0xe4, 0x04, 0x1d, 0xc8,
	0x65, 0x53, 0xed, 0xa0, 0x8e, 0xfa, 0x98, 0x99, 0x20, 0xf6, 0x06, 0x21, 0xfa, 0x15, 0x21, 0x45,
	0x0d, 0xcc, 0x02, 0xcf, 0x99, 0x8d, 0xc8, 0x22, 0x58, 0x4d, 0x36, 0xf3, 0xd8, 0x19, 0x11, 0x77,
	0x46, 0xc4, 0x3f, 0x75, 0x4e, 0x6d, 0xc7, 0x9e, 0x9d, 0x5a, 0xfa, 0x35, 0x39, 0xd1, 0xb5, 0x2a,
	0x5a, 0x37, 0xb0, 0x78, 0x72, 0xb4, 0x78, 0x72, 0xcb, 0x4f, 0x6d, 0x3b, 0xb9, 0xd1, 0xbc, 0x9b,
	0x7c, 0x72, 0x7c, 0xb2, 0x67, 0xa7, 0x96, 0x7e, 0x49, 0xc6, 0x45, 0xa9, 0xfc, 0xd8, 0xd3, 0xa3,
	0x95, 0x23, 0x47, 0x76, 0x92, 0x0b, 0x26, 0x0b, 0x28, 0x4b, 0x57, 0x3b, 0x3d, 0x2e, 0xf9, 0x96,
	0x9f, 0x5a, 0xfa, 0x21, 0x19, 0x40, 0xc5, 0x44, 0x19, 0x0d, 0x16, 0xc1, 0x6a, 0xbc, 0x75, 0x01,
	0x7d, 0x4c, 0x42, 0xef, 0x6f, 0x88, 0xfe, 0xfa, 0x88, 0x52, 0xf2, 0x9e, 0x54, 0x16, 0xa2, 0x21,
	0x92, 0xf1, 0xbd, 0xed, 0x60, 0xd5, 0x35, 0xc8, 0x68, 0xe4, 0x3a, 0x60, 0x80, 0x4c, 0x56, 0x41,
	0x74, 0xee, 0x99, 0xac, 0x02, 0xfa, 0x31, 0x39, 0x75, 0xa3, 0xf3, 0x1a, 0x98, 0x51, 0x32, 0xba,
	0xc0, 0xa4, 0xd7, 0xbf, 0x45, 0x8c, 0x9e, 0x93, 0x61, 0x63, 0xa0, 0x6e, 0xcf, 0xc2, 0xa5, 0x9b,
	0xdd, 0x86, 0x19, 0xa7, 0x8f, 0x48, 0xc8, 0xb4, 0x6e, 0xf1, 0x4f, 0x10, 0x1f, 0x30, 0xad, 0x33,
	0x4e, 0x3f, 0x25, 0xef, 0xfb, 0x5f, 0x20, 0xe4, 0x3e, 0xaf, 0xc0, 0x1e, 0x14, 0x8f, 0x12, 0x6c,
	0x3c, 0xfb, 0x2f, 0xf1, 0x1d, 0xe2, 0xf4, 0x92, 0x4c, 0x8c, 0x6a, 0xea, 0x02, 0x72, 0x14, 0x77,
	0x85, 0x34, 0xe2, 0xa0, 0x37, 0x9d, 0x44, 0x25, 0x2d, 0x2b, 0x6c, 0xee, 0x6c, 0xf9, 0xc2, 0x4b,
	0x74, 0xe0, 0x6b, 0x74, 0x67, 0x45, 0x66, 0xee, 0x0c, 0x1a, 0xcb, 0x6c, 0x63, 0xf2, 0xa6, 0x2e,
	0xa3, 0x67, 0xc8, 0x9b, 0x22, 0xfe, 0x23, 0xc2, 0x6f, 0xeb, 0xb2, 0x9d, 0x57, 0x34, 0xc6, 0xaa,
	0xca, 0x7d, 0xd0, 0x2b, 0x14, 0x4e, 0x3a, 0x28, 0xe3, 0xf4, 0x8a, 0x9c, 0xed, 0x44, 0x59, 0xb6,
	0xd2, 0xfd, 0x35, 0x8c, 0x5e, 0xe0, 0x0f, 0x1c, 0xc5, 0xa9, 0x8b, 0xb7, 0x53, 0x4f, 0xf0, 0x31,
	0x7d, 0x4a, 0x66, 0xe6, 0x20, 0xb4, 0xbe, 0x5b, 0x93, 0xde, 0xab, 0x39, 0xeb, 0x18, 0x5d, 0xd1,
	0x92, 0x9c, 0x96, 0x42, 0x42, 0x2e, 0x2c, 0x54, 0xb9, 0xe0, 0x26, 0x7a, 0xb9, 0xe8, 0xb7, 0xf7,
	0xa6, 0x05, 0x33, 0x0b, 0x55, 0xc6, 0xcd, 0xe6, 0x8f, 0x80, 0x84, 0x78, 0x23, 0x0d, 0x8d, 0x48,
	0xf8, 0x0d, 0x5e, 0x0a, 0x1a, 0xc6, 0x08, 0xcd, 0xfd, 0xb3, 0xcd, 0xbc, 0xc5, 0x43, 0xfb, 0x20,
	0xf3, 0x84, 0x84, 0xaf, 0xa0, 0x04, 0x0b, 0x74, 0x14, 0xfb, 0x8d, 0x30, 0x7f, 0xfc, 0xe0, 0x18,
	0xbe, 0x6e, 0xf7, 0x0f, 0x3d, 0x27, 0xfd, 0x6f, 0xc1, 0xde, 0x21, 0xfa, 0x26, 0x2f, 0xff, 0x09,
	0xfe, 0x4e, 0xff, 0x0a, 0xe8, 0x81, 0x8c, 0x9d, 0x92, 0xf4, 0x87, 0x6c, 0xf9, 0x33, 0xf9, 0xa0,
	0x60, 0xf5, 0x4e, 0xc9, 0xf5, 0x8e, 0x15, 0xd7, 0x20, 0xf9, 0xda, 0x02, 0xab, 0x68, 0x7c, 0xb0,
	0x56, 0x9b, 0xe7, 0x49, 0xb2, 0x17, 0xf6, 0xd0, 0xec, 0xe2, 0x42, 0x55, 0x49, 0x05, 0xe6, 0x20,
	0xde, 0xdd, 0x08, 0x65, 0xdd, 0xc6, 0x5b, 0xbb, 0x6d, 0xb9, 0x66, 0x5a, 0xcc, 0xcf, 0x38, 0xfc,
	0xf6, 0xc2, 0x13, 0x5a, 0xf2, 0xa6, 0x7f, 0x15, 0x7f, 0xfe, 0x24, 0xe8, 0x6d, 0x66, 0x4c, 0xeb,
	0x52, 0x14, 0xb8, 0xd5, 0x92, 0x5f, 0x8d, 0x92, 0xcf, 0x1f, 0x20, 0xbf, 0x84, 0xae, 0xd1, 0x2e,
	0xc4, 0xb6, 0x4f, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x5f, 0xbd, 0xd9, 0x1c, 0x8d, 0x05, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrdersClient is the client API for Orders service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrdersClient interface {
	Create(ctx context.Context, in *Order, opts ...grpc.CallOption) (*Order, error)
	Update(ctx context.Context, in *Order, opts ...grpc.CallOption) (*Order, error)
	Delete(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*Order, error)
}

type ordersClient struct {
	cc *grpc.ClientConn
}

func NewOrdersClient(cc *grpc.ClientConn) OrdersClient {
	return &ordersClient{cc}
}

func (c *ordersClient) Create(ctx context.Context, in *Order, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/Orders/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersClient) Update(ctx context.Context, in *Order, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/Orders/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersClient) Delete(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Orders/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ordersClient) Get(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/Orders/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrdersServer is the server API for Orders service.
type OrdersServer interface {
	Create(context.Context, *Order) (*Order, error)
	Update(context.Context, *Order) (*Order, error)
	Delete(context.Context, *OrderId) (*empty.Empty, error)
	Get(context.Context, *OrderId) (*Order, error)
}

// UnimplementedOrdersServer can be embedded to have forward compatible implementations.
type UnimplementedOrdersServer struct {
}

func (*UnimplementedOrdersServer) Create(ctx context.Context, req *Order) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedOrdersServer) Update(ctx context.Context, req *Order) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedOrdersServer) Delete(ctx context.Context, req *OrderId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedOrdersServer) Get(ctx context.Context, req *OrderId) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterOrdersServer(s *grpc.Server, srv OrdersServer) {
	s.RegisterService(&_Orders_serviceDesc, srv)
}

func _Orders_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Orders/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServer).Create(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

func _Orders_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Orders/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServer).Update(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

func _Orders_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Orders/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServer).Delete(ctx, req.(*OrderId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Orders_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Orders/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServer).Get(ctx, req.(*OrderId))
	}
	return interceptor(ctx, in, info, handler)
}

var _Orders_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Orders",
	HandlerType: (*OrdersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Orders_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Orders_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Orders_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Orders_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/orders.proto",
}
